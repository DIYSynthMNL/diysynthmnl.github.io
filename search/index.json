[{"content":"This module is licensed under the MIT License\nModule GitHub link\nA random control voltage and trigger/gate sequencer Eurorack module This module is a random CV and trigger/gate sequencer with a built in quantizer with predefined scales. An upgrade from my first random sequencer module.\nBuilt with the Pi Pico. Coded in Python.\nDemo Inspiration I\u0026rsquo;ve taken some inspiration from the popular random module called the Turing Machine. Also, I\u0026rsquo;ve taken some code from the EuroPi, specifically the analog reader for the CV inputs and knobs.\nTODO Prototype Schematic CV input code Random triggers A better menu system Better logic, moving the rotary encoder while its running will make the sequencer glitch Features Basic features 128x64 oled screen Rotary Encoder A random cv sequencer A random trigger/gate sequencer Trigger length based on clock input Output cv quantized based on scale chosen 4 Analog parameter knobs with inputs IO 4 Analog inputs with attenuation and offset knobs (serving as control knobs if no input is connected) Clock/trigger input Digital input (unused) Trigger output vOct output Menu choices Scale/Mode CV Probability Trigger Probability Trigger length (0 to 100% of clock) Number of steps (2 to 16 (You can modify the max steps in the code)) Octaves (the number of octaves it should range from (1 to 5)) Starting note (note 1 to 12) CV sequence erase toggle Trigger sequence erase toggle Test CV scale/sequence toggle (it will run through the current scale chosen ascending) Tuning CV scale/sequence toggle (to help you tune your vco) How it randomizes Every high clock pulse, the current step will be changed randomly depending on the probability.\nThe algorithm simply does the following:\nIt selects a random note from the current scale chosen. Then it decides if the current step will be overwritten by the random note based on the probability.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 def randomly_change_current_step_cv() -\u0026gt; None: # get random index of scale chosen random_scale_index = random.randint(0, len(current_12bit_scale) - 1) # set cv from scale list if generate_boolean_with_probability(cv_probability_of_change): # print(\u0026#34;change cv\u0026#34;) cv_sequence[current_step] = current_12bit_scale[random_scale_index] def randomly_change_step_trigger() -\u0026gt; None: global trigger_sequence trig_on_or_off = random.randint(0, 1) if generate_boolean_with_probability(trigger_probability_of_change): trigger_sequence[current_step] = trig_on_or_off def generate_boolean_with_probability(probability: float) -\u0026gt; bool: \u0026#34;\u0026#34;\u0026#34; Returns True or False based on the given probability. :param probability: The probability of returning True, in the range [0, 100]. :type probability: float :return: True with probability `probability`, False otherwise. :rtype: bool \u0026#34;\u0026#34;\u0026#34; if not 0 \u0026lt;= probability \u0026lt;= 100: raise ValueError(\u0026#34;Probability must be between 0 and 100\u0026#34;) return random.random() * 100 \u0026lt;= probability Schematic I used a clone of the Pi Pico (Pi Pico Lite Black 16MB).\nIf you don\u0026rsquo;t have it available, you can use an original Pi Pico. You just have to change some pin assignments. The clone I found has an additional ADC pin (GP29). You can ommit the fourth cv input, you just have to adjust the code.\nProgramming instructions Starting fresh (Preparing the pico for the firmware) Download flash_nuke.uf2 from Adafruit. While holding down the BOOTSEL button on the Pi Pico, connect the usb cable to your computer. It should be visible as a USB drive as RPI-RP2. Copy the downloaded flash_nuke.uf2 into it. This will wipe any firmware in the Pico. Be sure to backup any files in your Pico. Uploading main.py and lib You can use Thonny IDE or VSCode with the Micropico plugin.\nDevelopment instructions If you need to program the pico while it is connected to eurorack power, you can.\nTurn on the module (eurorack power) Plug in the usb to the pico (yes it won\u0026rsquo;t damage the pico) Developing with VSCode Use VSCode with the plugin MicroPico\nUse the commands while developing:\nDelete all files from pico Upload project files to pico Run Menu system I cobbled up some code to help me make a menu system for this project. Its still in the early stages of development. I still need to clean it up. You can take a look at my menu.py code in the GitHub repo for this project.\nHow the menu system works SETTING SUBMENUS:\nFirst, you would have to create instances of submenus in your main program. Then you can put those instances in a list called submenu_list. Lastly, call the set_submenus().\nMAKING THE DISPLAY AND ENCODER DO ITS JOB:\nCall loop_main_menu(update_main_program_values_callback=[callback_function]) in a while True loop. The callback function is for updating the variables used in your main program. It is discussed more in detail below.\nGETTING DATA FROM THE MENU SYSTEM INTO YOUR MAIN PROGRAM:\nThis library only handles the \u0026ldquo;front end\u0026rdquo; of your main python program, handling user interaction with the display and the rotary encoder. It is designed to hold data but you should have variables in your main program so you can access the data easily. For example, you need to get data from a submenu: you would need to call get_submenu_list() in order to update the main program\u0026rsquo;s variables. To help you update your main program\u0026rsquo;s variables from the submenus, you will need to provide a callback function in your main program (example: update_values()). This callback function will only be called when a submenu\u0026rsquo;s selected value has been changed (user pressed the encoder button).\nMCP 4725 lookup table The optimal lowest voltage should not be 0. The MCP4725 cannot output exactly 0v for some reason. Your tuning will not be exact when the value is 0.\nnote no 12 bit value voltage output keyboard note (example only) 0 0 0 C 1 68 0.0830078125 C# 2 136 0.166015625 D 3 204 0.2490234375 D# 4 272 0.33203125 E 5 340 0.4150390625 F 6 408 0.498046875 F# 7 476 0.5810546875 G 8 544 0.6640625 G# 9 612 0.7470703125 A 10 680 0.830078125 A# 11 748 0.9130859375 B 12 816 0.99609375 C 13 884 1.079101563 C# 14 952 1.162109375 D 15 1020 1.245117188 D# 16 1088 1.328125 E 17 1156 1.411132813 F 18 1224 1.494140625 F# 19 1292 1.577148438 G 20 1360 1.66015625 G# 21 1428 1.743164063 A 22 1496 1.826171875 A# 23 1564 1.909179688 B 24 1632 1.9921875 C 25 1700 2.075195313 C# 26 1768 2.158203125 D 27 1836 2.241210938 D# 28 1904 2.32421875 E 29 1972 2.407226563 F 30 2040 2.490234375 F# 31 2108 2.573242188 G 32 2176 2.65625 G# 33 2244 2.739257813 A 34 2312 2.822265625 A# 35 2380 2.905273438 B 36 2448 2.98828125 C 37 2516 3.071289063 C# 38 2584 3.154296875 D 39 2652 3.237304688 D# 40 2720 3.3203125 E 41 2788 3.403320313 F 42 2856 3.486328125 F# 43 2924 3.569335938 G 44 2992 3.65234375 G# 45 3060 3.735351563 A 46 3128 3.818359375 A# 47 3196 3.901367188 B 48 3264 3.984375 C 49 3332 4.067382813 C# 50 3400 4.150390625 D 51 3468 4.233398438 D# 52 3536 4.31640625 E 53 3604 4.399414063 F 54 3672 4.482421875 F# 55 3740 4.565429688 G 56 3808 4.6484375 G# 57 3876 4.731445313 A 58 3944 4.814453125 A# 59 4012 4.897460938 B 60 4080 4.98046875 C ","date":"2025-03-08T09:50:14Z","image":"https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06786_hu_b7340ec37ddf6ea2.jpg","permalink":"https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/","title":"Pi Pico Random Looping Sequencer"},{"content":"Module GitHub Link\nThis module is shared under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International license. All credits go to Tom Wiltshire, founder of Electric Druid.\nTODO Draw schematic based on the datasheet Determine if the regulators need load resistors, I’ll put it in just in case Try to change the CV input op amps to MCP6004 compare both TL074 will suffice Add bitcrush CV in Add glide CV in Try circuit on breadboard Build prototype Fix prototype glitching issues Add 100nF cap to pin 10 to ground to clear up glitch issues Add a 220uF from pin 17 to ground to clear up glitching issues Design PCB Introduction I bought one of these chips from Electric Druid. It sounds awesome! This module is my adaptation of the circuit in Electric Druid\u0026rsquo;s VCDO chip Datasheet (p5-8). If you\u0026rsquo;d like to build one yourself, please buy the chip from Electric Druid to support their work. Otherwise, you can program your own PIC chip but you must use it for non-commercial applications.\nTake a look at these other resources from Electric Druid:\nVCDO page VCDO shop page Demo Module Features 2 Oscillators Main Wavetable Oscillator - smooth transition between 16 waves A sub oscillator - incremental transition between 8 sub waves (+1 octave, unison, -1 octave, -2 octaves) Has wave bitcrush (can be reduced from 8bit to 1bit) and glide (portamento) Module I/O and Controls Inputs and outputs Inputs\nNote CV (0v to 5v) FM (10vpp) Main wave select (10vpp) Sub wave select (10vpp) Bitcrush amount (10vpp) Glide time amount (10vpp) Glide on/off (0v to 5v) From top to bottom, left to right:\nTuning knobs Course tuning knob Fine tuning knob Control Knobs Bitcrush control knob Glide time control knob Main oscillator wave select control knob Sub oscillator wave select control knob Input attenuation knobs Bitcrush cv input attenuation knob Glide time cv input attenuation knob Main oscillator wave select cv input attenuation knob Sub oscillator wave select cv input attenuation knob CV inputs (10Vpp, -5v to 5v) Bitcrush CV input Glide time CV input Main oscillator wave select CV input Sub oscillator wave select CV input IO at the bottom row vOct input (0v to 5v, quantised to chromatic scale, from note 0 to 63) Glide on/off input (0v to 5v) FM input with attenuation knob (10vpp) Main oscillator output (10vpp) Sub oscillator output (10vpp) Design Notes Adding CV to bitcrush and glide The circuit below converts 10vpp +/-5v to 0-5v using a TL074 op amp\nThe circuit below does the following. When you plug in a 10vpp signal, it will bypass RV14, the control pot. When there is nothing plugged in, you can control the parameter using the potentiometer.\nThe screenshot below is a simulation of the circuit above.\nTake a look at the circuit from Electric Druid’s LFO. We wouldn\u0026rsquo;t need the circuit above. A much better circuit for glide and bitcrush\nSchematic Conclusion The prototype I built is one of the most intricate prototype builds I\u0026rsquo;ve done. It still has a glitching pitch issue so be careful in building your own module. Be sure to read the comments in the Electric Druid project page.\nYou can build your own module using my 3D printed panel (designed using benjiaomodular\u0026rsquo;s EuroPanelMaker) I tweaked the placement of the IO and controls so they line up with a generic protoboard. You have to cut the protoboard to size using my prefferred method - scoring using a blade.\nDon\u0026rsquo;t hesitate to contact me on my socials if you have any questions or comments about the module!\n","date":"2023-12-29T06:07:14Z","image":"https://diysynthmnl.github.io/p/electric-druid-vcdo/images/DSC06823_hu_76b9acfeeadc8de.jpg","permalink":"https://diysynthmnl.github.io/p/electric-druid-vcdo/","title":"Electric Druid VCDO"},{"content":"Module GitHub Link\nSome background I’m designing a distortion/saturation modular synth module using different methods of distorting audio signals. This module is a combination of transformer, opto, and clipping distortion/saturation.\nRevision Summary Schematic Revision 0.5 - an easier to read schematic - please note that there are some errors in this. The Eurorack power connector pins are backwards. Use this as a reference for the circuit design. Schematic Revision 0.6 - multiboard layout (LATEST - working on circuit revisions) PCB Revision 0.1 - revising in progress (working on rev 0.2) Source of inspiration DIYRe’s Colour Modules I got some ideas from DIYRe\u0026rsquo;s Colour modules. DIYRe is a company that produces DIY kits for professional audio recording equipment. Some of their product offerings include recording studio rackmount effects.\nThe Colour Format\nReal analog plugins.\nhttps://www.diyrecordingequipment.com/pages/the-colour-format\nColour Module What does it do? What ideas did you get? Link to page Schematic CTX Transformer Colour A transformer saturation module with a discrete opamp and a Cinemag audio transformer which has a 1:1 turns ratio. Non-inverting amp to drive the transformer past what it can handle. Resistor before the transformer that isolates the opamp from the transformer. https://www.diyrecordingequipment.com/products/ctx-cinemag-transformer-colour-mkii https://cdn.shopify.com/s/files/1/0698/2265/files/CTX_mkII_Schematic.pdf?375 Colourphone A telephone sound emulator. It uses a bandpass filter and a 1:1 turn ratio audio transformer. I have a similar transformer which is a 600:600 ohm transformer. Resistor before the transformer that isolates it from the opamp. https://www.diyrecordingequipment.com/products/colourphone-telephone-distortion-colour https://cdn.shopify.com/s/files/1/0698/2265/files/XQP_Colourphone_Schematic_1.3.pdf?8973696934571457842 Colourupter An opto distortion module that is vactrol based. Using a vactrol and the circuit around it. IC1c and IC1d only. https://www.diyrecordingequipment.com/products/colourupter https://cdn.shopify.com/s/files/1/0698/2265/files/XQP_Colourupter_Schematic_1.7.pdf?13355729951948932441 Other sources Vactrol wet/dry mix from music thing modular’s spring reverb module https://www.musicthing.co.uk/Spring-Reverb/ Eliot Sound Products https://sound-au.com - is a website full of audio articles that I’ve learned from. Go search for these articles, they’re great! Designing With Op Amps Audio Transformers Soft Clipping Circuit Design I will update this section soon. Stages Input gain stage (buffer only, see design note below)\nWe must take into account the headroom of the op amp. The NE5532 can only output 2 volts less than the supply voltage. So for example, your supply voltage would be +/- 12V, your max output would be 10V based on the image below.\nA buffer would suffice as the input stage. It would be nice to give the transformer more voltage but we wouldn’t be able to amplify the 10Vpp input to 12Vpp unless we use a +/- 15V supply.\nI chose to use an NE5532 Op Amp because I believe it can drive outputs higher than TL07x.\nTransformer Saturation\nThe transformer distortion works by oversaturating the transformer’s core past what it can handle. The transformer I used would normally be used in line audio signals. A 600:600 ohm transformer. We’re using Eurorack voltage which is around 10vpp so that would oversaturate the transformer.\nVactrol Opto Electronic Saturation\nThe transformer’s output was low, I needed to add a non-inverting op amp with gain to bring the levels back to 10vpp for this stage.\nI got this circuit from DIYRe’s Colourupter colour module which uses a Vactrol to clip the signal.\nSoft Clipping Diode Saturation\nI chose to place these diodes after the wet amplifier. It would be softer if I placed it before the U4A. I chained LEDs to the 1N4148s to get a softer clipping effect. LEDs alone would make saw waves looking like square waves.\nVoltage controlled Vactrol Wet/Dry mix\nI used my handmade Vactrol. I made it using a 5mm diffused red LED and a 5mm LDR enclosed with black heat shrink tubing. I crimped the ends so no light would leak in. 47k works for R17 with my Vactrol.\nSchematic Revisions Revision 0.2\nTODO Replace R5 with trimmer Test wet/dry mix on breadboard Input buffer biasing resistor Notes The transformer saturation is very subtle on a mono synth Revision 0.3\nTODO\nAdd gain trimmer to dry signal at U2B\nScrap the single saturation and add diode clipping and the Colourupter, the transformer alone is too subtle\nTest output gain stage\nRevision 0.4\nScrap output auto gain add opto saturation add soft clipping diodes Revision 0.5\nMultiboard layout Revision 0.6\nFix amplitude difference on opto sat stage output. PCB Design Dec 27, 2023 - Almost satisfied with the board design, rev0.1\nRev 0.1 in black\nPCB revisions Todo for Revision 0.1 Ground plane vias Front panel ground plane Double check hole sizes Trimmer Double check via sizes Round tracks Todo for Revision 0.2 Front panel Add keep out zone for led window zone fills for FCU and BCU - I had to Dremel it out for the revision 0.1 front panel board Enlarge switch holes for Dailywell switches Enlarge trimmer holes Change tilt knob silkscreen to “mix” Fix amplitude difference on opto sat output. The opto stage attenuates the signal from the transformer too much Revision 0.1 Board test notes Voltage tests Power rails after reverse protection diode I used a 1N4007 diode V+ reads about 10V V- reads about 11V I might need to change the reverse protection diodes to Schottkys Music thing modular’s cv wet dry circuit has an optimal input of 0-5V control voltages. If 10Vpp was used, the middle of the cv level pot is zero. Fully clockwise, the cv would be in phase. Fully counter clockwise, the cv is inverted. This is simulated in falstad, the file is included in the falstad folder. Gain trim is finicky. Turning on the Opto would attenuate the signal. Maybe this is caused by the variety of the vactrol, I think not all vactrols are equal. Opto gain/amplitude trim might be required. It might be a simple resistor value change within the circuit. LEDs are not as bright as I want them. ","date":"2023-12-03T00:00:00+08:00","image":"https://diysynthmnl.github.io/p/multi-saturation-module/DSC06849_hu_fa63d90a0ff42c06.jpg","permalink":"https://diysynthmnl.github.io/p/multi-saturation-module/","title":"Multi Saturation Module"},{"content":"Module GitHub Link\nThis module is licensed under the MIT License\nTODO Schematic Build prototype PCB Design Introduction This module is a simple VC ADSR design. The design is based on the chip\u0026rsquo;s datasheet info.\nModule Images Demo Module Features Each envelope parameter is CV controllable (Attack, Decay, Sustain, Release)\nI/O and Controls Inputs:\nGate input (0-5v, 0-10v) Attack CV input (10vpp) Decay CV input (10vpp) Sustain CV input (10vpp) Release CV input (10vpp) Output:\nEnvelope output (0-5v) Controls (knobs):\nAttack input attenuation knob\nAttack offset knob (serves as control knob when no input is connected)\nDecay input attenuation knob\nDecay offset knob (serves as control knob when no input is connected)\nSustain input attenuation knob\nSustain offset knob (serves as control knob when no input is connected)\nRelease input attenuation knob\nRelease offset knob (serves as control knob when no input is connected)\nDesign Notes The Attack, Decay, and Release CV inputs are inverting mixers.\nThe sustain circuit is a combination of an inverting mixer and an inverting amp with a gain of 1 to invert it back in phase. A schottky diode clamps the positive voltage to +5v.\nCheck out the falstad circuit simulation here\nSchematic Conclusion If you\u0026rsquo;d like to build this module, I have provided a 3D printed front panel file in the repo. I used readily available green perfboard. The components should line up with the perfboard\u0026rsquo;s holes. The panel was made using benjiaomodular\u0026rsquo;s europanelmaker.\n","date":"2025-03-10T15:18:15Z","image":"https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/DSC06835_hu_9ee8fbb52b822a09.jpg","permalink":"https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/","title":"AS3310 Voltage Controlled ADSR"},{"content":"KiCad terminal Command\n1 kikit separate --source \u0026#34;annotation; ref: B3\u0026#34; ^ \u0026#34;C:\\Users\\Acer\\Desktop\\Synth DIY\\KiCad Designs\\EuroBusboard\\EuroBusboard.kicad_pcb\u0026#34; \u0026#34;C:\\Users\\Acer\\Desktop\\Synth DIY\\KiCad Designs\\EuroBusboard\\eurobusboard_jst_8.kicad_pcb\u0026#34; How to use it?\nOpen KiCad Command Prompt Enter the command 1 2 kikit separate --source \u0026#34;annotation; ref: [Board marker reference (ex. A)]\u0026#34; ^ \u0026#34;[Path to .kicad_pcb to separate]\u0026#34; \u0026#34;[Path to save separated .kicad_pcb]\u0026#34; ","date":"2024-02-16T00:00:00+08:00","permalink":"https://diysynthmnl.github.io/p/kikit-multiboard-workflow/","title":"Kikit Multiboard Workflow"},{"content":" Programming the EuroPi https://github.com/Allen-Synthesis/EuroPi/blob/main/software/programming_instructions.md\nUsing the smaller version of the Pi Pico Change pins on europi.py I2C OLED pins 0, 1 Extra I2C pins 2, 3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Pin assignments PIN_DIN = 22 PIN_AIN = 26 PIN_K1 = 27 PIN_K2 = 28 PIN_B1 = 4 PIN_B2 = 5 PIN_CV1 = 21 PIN_CV2 = 20 PIN_CV3 = 16 PIN_CV4 = 17 PIN_CV5 = 18 PIN_CV6 = 19 PIN_USB_CONNECTED = 24 Original Pi Pico Pinouts Pi Pico Super Mini pinout Edited europi.py pin assignments for Pi Pico Super Mini (to test) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # Pin assignments PIN_DIN = 6 PIN_AIN = 26 PIN_K1 = 27 PIN_K2 = 28 PIN_B1 = 7 PIN_B2 = 8 PIN_CV1 = 9 PIN_CV2 = 10 PIN_CV3 = 11 PIN_CV4 = 12 PIN_CV5 = 13 PIN_CV6 = 14 PIN_USB_CONNECTED = 24 OLED SDA - GP0 SCL - GP1 Extra I2C pins Extra I2C 2, 3 How does the outputs work? How I understand it:\nThe Pi Pico outputs a 100kHz PWM pulse The output circuit filters the pulses like a DAC would do it using an RC filter. When the pulse width is low (0%) the voltage is low When the pulse width is high (100%) the voltage is high MCP6004 Pinout VDD = POSITIVE, 5v VSS = NEGATIVE, 0v or GND\n","date":"2024-01-15T12:11:43Z","image":"https://diysynthmnl.github.io/p/europi-build/DSC06874_hu_fdc0e7dad2e06a5b.jpg","permalink":"https://diysynthmnl.github.io/p/europi-build/","title":"Europi Build"},{"content":"Board Stackup - Physical stackup Board Stackup - Board Finish Board Stackup - Solder Mask/Paste Text \u0026amp; Graphics - Defaults Design Rules - Constraints Design Rules - Pre-defined Sizes ","date":"2024-01-01T00:00:00+08:00","image":"https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/1_hu_9a5e62bca59b70df.png","permalink":"https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/","title":"My Kicad Board Setup Settings"},{"content":"Module GitHub Repo\nTODO Schematic Prototype PCB Design Introduction This module is a simple Quad VCA design. The design is based on the chip’s datasheet info.\nModule Images Demo Module Features Four exponential voltage controlled VCAs.\nEach CV input is normalled to the next. CV1\u0026gt;CV2\u0026gt;CV3\u0026gt;CV4 Each Signal input is normalled to the next. IN1\u0026gt;IN2\u0026gt;IN3\u0026gt;IN4\nThe 4th output jack can be switched to either the 4th VCA output or the mix output using a jumper.\nI/O and Controls Each VCA channel will have:\nControl voltage input (10vpp) Input attenuation knob Control (when no cv) / offset knob (when cv signal is present) Signal input (audio or CV signals) Signal output Design Notes Designing the cv input circuit https://www.analog.com/media/en/technical-documentation/data-sheets/SSM2164.pdf\nControl voltage and gain/attenuation\nUnity gain = 0v control voltage -100dB of attenuation = +5v control voltage With that, a control voltage of 0 to 5v is optimal. We can just invert the input using an inverting op amp.\nAnother design decision that I would like to add to the module is normalling both cv and audio inputs to the next vca. I1\u0026gt;I2\u0026gt;I3\u0026gt;I4, CV1\u0026gt;CV2\u0026gt;CV3\u0026gt;CV4 when nothing is connected to multiply whatever is connected to the first input.\nProtection from no negative power supply\nUsing the SSI 2164 datasheet CV input circuit 2164 chip voltage and attenuation relationship (Inverse) based on the ssi2164 datasheet\n3.4V = Mute 0V = unity gain Datasheet circuit sums, inverts, attenuates the control voltage input Falstad simulation link Falstad Link\nResources http://www.sdiy.org/philgallo/mgbvca.html https://doepfer.de/a1324.htm https://modwiggler.com/forum/viewtopic.php?t=96486 http://electronic-sea.net/SSM2164.html https://www.amazingsynth.com/parts/ssi2164/ssi2164-datasheet.pdf Schematic Conclusion If you\u0026rsquo;d like to build this module, I have provided a 3D printed front panel file in the repo. I used readily available green perfboard. The components should line up with the perfboard\u0026rsquo;s holes. The panel was made using benjiaomodular\u0026rsquo;s europanelmaker.\n","date":"2023-12-29T06:07:14Z","image":"https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/DSC06842_hu_a572a9d748e6e3b5.jpg","permalink":"https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/","title":"AS2164 Quad Exponential VCA"},{"content":"Module GitHub Link\nTODO Schematic Prototype PCB Design Introduction This module is a Low Pass VCF using the AS3320 chip I bought from Electric Druid.\nModule Images Demo Module Features Design Notes Resources V3320 datasheet from cool audio AS3320 datasheet Electric Druid\u0026rsquo;s article about cem3320 filter designs Electric Druid article about reconfigurable filters Electric Druid article about pole mixing filters Eddy Bergman\u0026rsquo;s digisound 80 build Hagiwo’s circuit Reddit help question Eurorack 3320 Low Pass VCF Design Help Needed: Electrolytics for AC Coupling? And some other design questions.\nHi there! I’m designing a Eurorack 3320 LP VCF based on the AS3320 chips I got from Electric Druid. I’ve tried my best to research before asking here but I came up sort of knowledge. I’d like to ask for your help! I’ve got a small quantity of these AS chips and I want to build them into Eurorack modules as correct as possible. The datasheet for the 3320 uses an electrolytic cap on its output. I’ve read that there are downsides when using (polarized capacitors) electrolytics for AC coupling. One suggestion that the article said is this: “Use two polarized electrolytic capacitors back to back, with or without some kind of DC bias applied to the centre, or parallel diodes that attempt to limit reverse voltage.” I’m not quite sure what’s the best way to handle this. My current schematic applying the two polarized capacitors back to back. Some other questions that popped up in my head:\nBased on the datasheet circuit, the output of the 3320 is DC (0V to VCC*0.43)? Should the 3320’s audio input be AC coupled as well? What voltages does the 3320 expect at its audio inputs? Circuits I saw online have inverting buffers before the 3320’s audio input. Why is this necessary? Why invert them? I appreciate the help!\nu/halifax\u0026rsquo;s reply:\nThe datasheet shows an output DC offset of between 5 V to 9 V with a typical value of 6.5 V with +-15V supply and 0 V input. I haven\u0026rsquo;t seen AC coupling on the Mutable Ripples or Befaco BF-22. It seems that the common practice is to not AC couple for general inputs in Eurorack low pass filters. The 3320 input is basically an Operational Transconductance Amplifier (OTA) which has a current input. Pin 1 is basically at ground. There is a hard current limit on the chip of 40mA for any pin. With the 91k input resistor and assuming a +-5V VCO input you get a really small current of around +- 0.055 mA. Generally you want to keep your pass band (e.g. the part below the cutoff of a low pass) to be in phase with your original signal. If you are looking at snippets of some larger schematic there may be an inverting stage upstream that they are inverting back from. Something like an inverting mixer that combines a few signals that needs to be inverted back again so that the output is in phase with the input signal. On your schematic I would only include the AC coupling before the Pro-one output buffer and since you know that it\u0026rsquo;s positively biased you don\u0026rsquo;t need the back-to-back caps. The feedback signal needs to be AC coupled. I would skip the inverter input, input AC coupling and change the output inverter to a buffer and get rid of that AC coupling since that is handled in the previous stage. Schematic Conclusion If you\u0026rsquo;d like to build this module, I have provided a 3D printed front panel file in the repo. I used readily available green perfboard. The components should line up with the perfboard\u0026rsquo;s holes. The panel was made using benjiaomodular\u0026rsquo;s europanelmaker.\n","date":"2023-12-29T06:07:14Z","image":"https://diysynthmnl.github.io/p/as3320-vcf/images/DSC06861_hu_7d97d9313d2f8478.jpg","permalink":"https://diysynthmnl.github.io/p/as3320-vcf/","title":"AS3320 VCF"},{"content":"Module GitHub Repo\nSome background The AS3330 is a dual linear/exponential VCA. The Eurorack module should perform as follows:\n10Vpp signal inputs 10Vpp signal outputs Designed to be used with envelope generators or LFOs Ranging from 0V-5V, 0V-10V, and 10Vpp CV signals Datasheet and Digisound 80-9 Circuit Design Refer to the datasheet diagram which I have drawn for the commentary below. I took some explanations from the Digisound 80-9 module documentation. The Digisound 80-9 has nice explanations on how the 3330 chip works. I’ve used ohms law and voltage divider calculators to make sense of the datasheet electrical characteristics and circuit.\nSignal inputs pin 4 and 13 10Vpp A current input A summing node Uses 100K resistors to convert an input voltage into an input current The Digisound 80-9 circuit added compensation resistor and cap. And a diode to prevent latch up problems. Signal outputs pin 1 and 16 should be 10Vpp A current output Uses a transimpedance amplifier configuration to convert output current into output voltage If the output is lower or higher than 10Vpp I will experiment with the 51K feedback resistor Based on the Digisound circuit. The 51K resistor sets the maximum gain to 0.4. I used a 100K resistor for the feedback resistor to get the same voltage output from the input. Control voltage inputs Linear inputs pin 7 and 12 0 to 10V based on the datasheet circuit (through the resistor) 0V = max attenuation 10V = unity gain Icl = 100uA at 10V through the 100K resistor A current input The 100K resistor converts the input voltage into an input current A summing node Would be able to add more control inputs like AM (Digisound 80-9) through a resistor A compensation capacitor connected to the VG pin prevents the log converter from oscillating when the gain of the linear control input is below -80dB (Digisound 80-9) 1nF or larger The input must be normalled to VCC through a jack in order to use one of the other (linear or exponential). If one is zero, the gain will be zero regardless of the voltage on the other (Digisound 80-9) Exponential inputs pin 6 and 14 -1V to 10V based on the datasheet circuit (through the resistor divider) 0V = unity gain 10V = max attenuation A voltage input (unverified) A voltage divider brings down the input voltage (33K and 1K). @10V, Vce would be 294.12 mV Based on the Digisound circuit. The exponential input should be inverted first to increase gain by increasing the control voltage. A 0V input should mute the signal, and a 10V input should be at unity gain. That would give you another summing node so that you can add more control inputs through resistors. The input must be normalled to VCC through a jack in order to use one of the other (linear or exponential). If one is zero, the gain will be zero regardless of the voltage on the other (Digisound 80-9) Gain inputs pin 2 and 15 Based on the datasheet circuit, a resistor is connected to VCC to provide a reference current. A 100uA reference current is implied. RB = 150K at +15V RB = 120K at +12V 100uA produces good scale accuracy (Digisound 80-9) Distortion trim input pin 3 and 17 I currently don’t see any information on the datasheet. It’s just connected to ground. In the Digisound 80-9 documentation, it uses a trimmer. Said to reduce distortion. Feedthrough would be affected though as it was said. I’m not really familiar with feedthrough yet. IDLE input pin 8 Variable operating characteristics. Class A to Class B. A 6.8K resistor would set it to Class AB (datasheet) A 68K resistor would set it to Class A (datasheet) A 767K resistor would set it to Class B (datasheet) Good balance between distortion, bandwidth and control voltage feedthrough (Digisound 80-9) Power inputs VCC+ Max +18V in relation to GND +12V is safe VEE- Max -6V in relation to GND Current limiting resistor required for VEE voltages greater than -6V Based on the datasheet At -15V with a resistor of 680R, the current would be 22mA So for -12V we could aim less than or equal to 22mA (ohms law calculation) I think a 560R resistor would be ok (21.4mA) Can use a -5V regulator with no current limiting resistors needed Resources https://electro-music.com/forum/phpbb-files/203_006_vca3330_schematic_119.pdf Digisound 80-9 http://www.geofex.com/Article_Folders/panner.pdf https://www.analog.com/media/en/technical-documentation/application-notes/an148fa.pdf Circuit Design Design inspiration I took some inspiration from Intelligel’s Quad VCA module. It features four VCAs that can have a linear or exponential response. Its response can be tuned to anything in between linear and exponential. The level knob controls the CV offset so that you could use a wide range of voltage signals - bipolar or unipolar. The CV input can also be attenuated using a knob.\n","date":"2023-12-29T06:07:14Z","permalink":"https://diysynthmnl.github.io/p/as3330-dual-lin/exp-vca/","title":"AS3330 Dual Lin/Exp Vca"},{"content":"Module GitHub Link\nResources Tri to sin using a JFET AS3340 Datasheet Electric Druid - 3340 VCO Designs YuSynth VCO AS3340 Chip breakdown Power Supply Pins 16 (VCC Positive) and 3 (VEE negative) CANNOT be powered with +/- 15V, +/-12V without protection Voltage between VCC and VEE should be less than +24V Voltage between VCC and GND should be less than +18V Voltage between VEE and GND should be less than -6V A current limiting resistor is used in the datasheet when powering it with -15V You can power VEE with -5V without using a current limiting resistor When powering VEE with -15V, use an 820R current limiting resistor When powering VEE with -12V, use a 470R current limiting resistor Sync Pins 6 (Hard SYNC) and 9 (Soft SYNC) Output Levels Pins 4 (Pulse), 8 (Saw), and 10 (Triangle) Ramp - 2/3rds of the positive supply Triangle - 1/3rd of the positive supply Pulse - positive supply minus 1.3V Open emitter - requires a pulldown resistor to set the lower level With a +15V supply Ramp - 0 to 10V Triangle - 0 to 5V Pulse - 0 to 13.5V With a +12V supply Ramp - 0 to 8V Triangle - 0 to 4V Pulse - 0 to 10.7V Scale pins Pins 1 (Scale1) and 2 (Scale2) For temperature compensation High frequency tracking Pin 7 Compensates for the way that the time taken for the internal comparator to switch becomes significant at higher frequencies Timing capacitor Pin 11 Use a good quality capacitor Low leakage, low tempco Polystyrene film is the best option 1nF value Linear FM input Pin 13 Sometimes not used by designers, a only bias network is present (1M5, 470R, 10n) Note CV (Frequency CV) input Pin 15 a virtual ground summing node Usually see a bias network (360K, 470R, 10n) Summing resistors connected to the node for CV sources ","date":"2023-12-29T00:00:00+08:00","permalink":"https://diysynthmnl.github.io/p/as3340-vco/","title":"AS3340 VCO"},{"content":"My workflow on making Eurorack front panels Lock footprints on control board where the controls are soldered by using the lock feature in KiCad so that they won’t be moved when placing the panel hole footprints. Make the panel board outline. Be sure to align it with the control board. The footprints of the control board should be locked or else you’ll have a hard time moving the panel board out of the control board. Place panel hole footprints on the control board footprints. Alignment points on the panel hole footprints should snap to the control board footprints. When finished placing panel hole footprints. Triple check alignment then highlight the whole front panel and move it out of the control board. Make sure that the locked footprints are not selectable - unselect locked footprints check box in selection filter. To make it easy to make the front panel graphics, I use LibreCad to mark holes and clearances for the graphics. In KiCad, you will use the dimension tool to mark where the holes are and then transfer it manually to LibreCad. I’ll explore exporting to svg in kicad soon. Next I’ll import the hole guide svg to inkscape to place front panel graphics. Use black for the objects and paths, use white for the background. Convert all objects to paths (text are objects). This is important because KiCad can’t render those objects. Keep the board outline, you’ll need it for alignment later in KiCad. The svg created in Inkscape should be ready for importing. Import the svg by clicking file \u0026gt; import \u0026gt; graphics (ctrl + shift + F) and import your svg file. Double click the front panel graphics and make the layer front silkscreen. Align the graphic to the front panel board outline. ","date":"2023-12-27T00:00:00+08:00","permalink":"https://diysynthmnl.github.io/p/eurorack-panel-making-with-kicad-librecad-and-inkscape/","title":"Eurorack Panel Making With KiCad, LibreCad, and Inkscape"},{"content":"Adding Libraries Symbol Libraries Make sure you put the library in a folder that you would not delete. Not in your downloads folder. Click add existing library to table Browse to your .sym or .lib file within your folder and click ok Footprint Libraries Make sure you put the library in a folder that you would not delete. Not in your downloads folder. Click add existing library to table Browse to your .pretty folder and select it. Then click ok. Adding footprints To be continued\u0026hellip;\n","date":"2023-12-23T00:00:00+08:00","permalink":"https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/","title":"Adding Symbols, Footprints, and Libraries in Kicad"},{"content":"To jumpstart your PCB design I will list my recommended track widths for module PCBs. If you\u0026rsquo;re going for another manufacturer, be sure to know their capabilities.\nPCBWAY capabilities https://www.pcbway.com/capabilities.html Track widths https://www.reddit.com/r/synthdiy/comments/y1be7v/pcb_design_how_do_you_pick_trace_widths_for_your/\n0.02” for signal, 0.127mm, or 5 mils 0.035” for power, 0.889mm, PCBWAY: 4mil minimum, recommends a trace width above 6mils (0.15mm) Minimum track clearance PCBWAY: 4mil minimum, recommended 6mil Vias 0.2mm inner dia, 0.5mm outer dia PCBWAY: Min drill size is 0.2mm, max drill is 6.3mm. Any holes greater than 6.3mm or smaller than 0.3mm will be subject to extra charges. Pads For my longer pad footprints I use 2.54mm L * 1.6mm W with a 0.8mm hole PCBWAY: Min drill size is 0.2mm, max drill is 6.3mm. Any holes greater than 6.3mm or smaller than 0.3mm will be subject to extra charges. Text PCBWAY: min character width is 0.15mm Panelization ","date":"2023-12-23T00:00:00+08:00","permalink":"https://diysynthmnl.github.io/p/pcb-track-widths-vias-and-pads/","title":"Pcb Track Widths, Vias, and Pads"},{"content":"Dimensions Rails The rails I got are not specifically made for Eurorack but I tested it with some blank panels and it works. I used M3 square nuts and 6mm long screws. 6mm screws are a bit short so I should get 8mm long ones.\nLength https://synthracks.com/blog/eurorack-rails-diy-guide The standard rail lengths are as follows:\n60HP - 304.8mm 84HP - 426.72mm 104HP - 528.32mm 110HP - 558.8mm 126HP - 640.08mm 168HP - 853.44mm I will go for a single row 84HP case. So that would be a length of 426.72mm. I would cut a bit more so it would give me some room for error. I will go for a length of 427mm. I have to cut my rails. I have a total of 90cm to cut. I could only cut it into two so I went for 84HP.\nDepth From the top of the rails it should measure about 10cm or more depending on your power supply Module height I fit two blank modules on my rails and then measured the height between rails. I got 13.4 cm.\nDesign Inspiration I chose this design because I like how you can change the orientation.\nMy design I used google Sketchup to draft what I had in mind then I used Librecad to draw the side panel guides so I could transfer the template easily.\nInitial drafts:\nFinal Design:\nI would recommend using half inch or 10 - 15 mm thick plywood I used scrap wood. Make sure to screw in your rails first with some blank panels or modules in order to keep error low. My workflow:\nI’ll cut the rails into two Try them out with blanks Measure the height The height I measured was 13.4cm Think of the wood panel design, either beveled view or not Design the side panels Then cut wood panels Build! Some resources DIY eurorack case part 1 ","date":"2023-12-16T06:07:14Z","permalink":"https://diysynthmnl.github.io/p/building-my-first-eurorack-case/","title":"Building my first eurorack case"},{"content":"The basic components of a power input circuit in a module The circuit above is from a Mutable Instruments module.\nIDC input Reverse polarity protection Filter caps The Eurorack standard power connector ","date":"2023-12-14T17:21:32Z","image":"https://diysynthmnl.github.io/p/powering-your-module/eurorack_power_pinouts_hu_2d7ea75a02228d38.png","permalink":"https://diysynthmnl.github.io/p/powering-your-module/","title":"Powering Your Module"},{"content":"Here are some circuits to help protect your precious microcontroller\u0026rsquo;s inputs.\nProtecting microcontroller analog inputs Using Mutable Instruments’ Grids as our first example You will need a rail to rail op amp. A popular choice would be an MCP6002 chip. The op amp would be powered by 5v and ground (not +-12V!). This will \u0026ldquo;clamp\u0026rdquo; the cv signal. The output of the op amp connects to an analog input of a microcontroller. You would need a negative reference voltage source. Grids used a Zener diode. VEE is -12v. I usually use a 7905 -5v negative voltage regulator for the reference voltage. This is an inverting op amp circuit, you would need to adjust your code to accept inverted values Adding an input amplitude knob Adding an input amplitude knob to the Grids circuit would help us accept a wide range of signals in combination with the offset knob. 0-5v, 0-10v, and +-5v.\nProtecting microcontroller digital inputs It uses an NPN transistor with a pullup resistor Note that the Arduino pin will be low when the gate is high, code with this in mind. It connects directly to a digital input pin of the Arduino To protect your inputs more, you could add clamping diodes to the base of the transistor like below The bat42 Schottky diode is commonly used for this purpose Disclaimer: The information provided in this blog is based on my personal experience and knowledge. I am not formally educated in electronics design, and any design or information should be undertaken at your own risk. It is always recommended to consult with a qualified professional or conduct thorough research before attempting any electronics project. I do not guarantee the accuracy, completeness, or reliability of the information presented on this blog. By using this blog, you agree that I shall not be held responsible for any damages or losses that may arise from your use of the information provided.\n","date":"2023-12-14T00:00:00+08:00","image":"https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_input_protection_hu_e17a47cafa88cb21.jpg","permalink":"https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/","title":"Protecting Microcontroller Digital IO From Eurorack Levels"},{"content":"Idea I stumbled upon a video that relies on this clocked random trigger/gates module from State Azure.\nHere’s his patch notes:\nMain clock from Pamela\u0026rsquo;s New Workout, into Ladik R-110 for the random trigs/gates which are essential to this patch. (Synth voice - Plaits)Trig 1 goes through a Ladik S-090 Skipper at around 60%, which also is being CV modulated via Modbox with a very slow LFO. Trig 1 is then sent to Sinfonion Arp Clock input, which is also copied out to Delta V envelope generator slow atk/decay (decay modulated gently via one of Ochd\u0026rsquo;s outputs). This envelope controls Plaits output via the built into VCA in Delta V. Sinfonion Arp 1v/Oct Out goes into Plaits (arp set to either random or Brownian). Plaits Timbre is modulated via URA A-Out, Harm by B-Out, and Morph by another channel of Ochd. Plaits also receives fast sine LFO FM for vibrato. Plaits then goes through Belgrad, with v/oct modulated by second channel of Delta V 50%atk, 50%dcy (same Trig 1 activates it), which is also copied to Ochd CV input to modulated Ochd speed everytime the envelope is triggered. Belgrad set to 6th filter, FM on, 60% resonance. Span modulated via slow LFO of Ochd, and FM modulated by fast LFO of Ochd. (Vangelis lead - 4ms Ensemble) Gate1 from Ladik R-110 into Skipper set around 50% (CV modulated) via slow LFO from Modbox. Output from Skipper goes to Quadigy channel 1 and copied to Trig input on RndStep, copied again to Time Warp Gate input. Quadigy Ch.1 Envelope to Tallin linear input, slow attack/decay. Input into Tallin 4ms Ensemble Out B, Balance set to 70%, Twist, Warp and Cross FM all at 0%. Twist opens up via Ch.2 of Quadigy which is tied to Ch.1\u0026rsquo;s trigger, and also has a slow atk/decay for the synth swell. RndStep Bipolar output (attentuated) goes to Ch.3 on Sinfonion, with Ch.3 Sin output going into Time Warp (for Slew), out from Time Warp into 4ms Ensemble 1v/oct input. (Chainsaw Bass) Ch.1 Output from Sinfonion provides notes, into Chainsaw 1v/oct input. Chainsaw then into Freak filter (Steiner-Parker model), cutoff modulated via Ch. 4 of Quadigy which is triggered by PNW very slow/divided pulse into Skipper. (Chainsaw 2-note chords) Sinfonion chord Out 1 and Out 3 to second Chainsaw, then out to dual Cinnamon filters set to low-pass, with soft/slow LFO over cutoff via Batumi. (Sinfonion Key Change) Sinfonion song set to just two steps = E7 to A Major. In1 on Sinfonion set to advance through steps via Trig. Trig comes from PNW slow/heavily divided gate into another Skipper, then to Sinfonion. Lubadh plays back improvised recording from the Wavestate.\nHere’s the module’s details R-110 “Random clocked trigs/gates w. disable input” module for eurorack / Doepfer A100 system.\nFrom top to bottom:\nDisable input jack + LED (if active, gate outputs stays in its current state or are all switched off – selectable by internal jumper)\nClock input jack + LED\nTrig 1/2/3 output jacks and LEDs (probability = 1/3 so in average every third input clock makes output trigger)\nGate 1/2/3 output jacks and LEDs (probability = 1/3 so in average every third clock toggles output)\nIf there will be say 300 input clocks every trig output makes around 100 trigs. All outputs has same probability but they are independently evaluated (so they can fire together sometimes or individually sometimes).\nGates are processed similar way but there is “probability of change state”, if clock is evaluated as “valid” to change output state then output toggles (if currently is off then becomes on and vice versa) making gates “quantized” by their lengths to input clocks (gates starts and ends at clocks).\nConfigurable parameters (by internal jumpers, just one of first five should be set):\n1. jumper 1: fixed 1ms trig outputs\n2. jumper 2: fixed 200ms trig outputs\n3. jumper 3: variable trigger outputs length – quarter of input gate length\n4. jumper 4: variable trigger outputs length – half of input gate length\n5. jumper 5: variable trigger outputs length – equal to input gate length\n6. independent \u0026ldquo;disable\u0026rdquo; jumper (behind T1 output jack): gate outputs stays in its current state (jumper not set ) or are all switched off (jumper set) at active “disable” input signal\nCircuit Design It uses what looks like an ATMEL chip which probably is an ATMEGA. We can use an Arduino Nano for this module.\nWe have to protect the Arduino from 10vpp levels as a safety precaution. Head on to Protecting Digital IO From Eurorack Levels\nEurorack voltage levels CV -5v to +5v, 10vpp Clocks, Gates, Triggers are TTL level which is 0v to 5v (logic level) With this in mind, additional circuitry will be needed in order to protect i/o and convert Eurorack levels to Arduino levels.\nThe module’s inputs are as follows Gate hold (disable input) input, logic level Clock input, logic level We can protect the inputs using this circuit: The module’s outputs are as follows Trigger out 1/2/3 Gate out 1/2/3 We can have additional protection for the outputs in case the user accidentally plugs in a 10vpp voltage source, but we can worry about that later on. For now we’ll just directly connect the Arduino to the output jacks.\nHow the module works Let’s start by listing the module’s i/o:\nInputs Clock input Gate hold input Outputs Triggers 1/2/3 Probability of firing is 1 out of 3 clock pulses Can be set to a fixed value (1ms, 200ms) or variable (1/4, 1/2, 1/1, of clock input pulses) depending on the clock length by jumpers Gates 1/2/3 Probability of firing is 1 out of 3 clock pulses Gates will be the same as the clock pulse length If the gate hold input is high, their current state will be held ","date":"2023-12-13T10:13:27Z","image":"https://diysynthmnl.github.io/p/ladik-r110-clone/ladik_r-110_side_hu_6616c240614d74ba.jpg","permalink":"https://diysynthmnl.github.io/p/ladik-r110-clone/","title":"Ladik R110 Clone"}]