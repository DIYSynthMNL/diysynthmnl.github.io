<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on DIYSynthMNL</title><link>https://diysynthmnl.github.io/post/</link><description>Recent content in Posts on DIYSynthMNL</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 13 Mar 2025 13:23:19 +0000</lastBuildDate><atom:link href="https://diysynthmnl.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Pi Pico Random Looping Sequencer</title><link>https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/</link><pubDate>Sat, 08 Mar 2025 09:50:14 +0000</pubDate><guid>https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/</guid><description>&lt;img src="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06786.jpg" alt="Featured image of post Pi Pico Random Looping Sequencer" />&lt;p>This module is licensed under the &lt;a class="link" href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener"
>MIT License&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/DIYSynthMNL/Pi-Pico-Random-Looping-Sequencer" target="_blank" rel="noopener"
>Module GitHub link&lt;/a>&lt;/p>
&lt;h2 id="a-random-control-voltage-and-triggergate-sequencer-eurorack-module">A random control voltage and trigger/gate sequencer Eurorack module
&lt;/h2>&lt;p>This module is a random CV and trigger/gate sequencer with a built in quantizer with predefined scales. An upgrade from my &lt;a class="link" href="https://github.com/NeoRecasata/RandomLoopingSequencer" target="_blank" rel="noopener"
>first random sequencer module&lt;/a>.&lt;/p>
&lt;p>Built with the Pi Pico. Coded in Python.&lt;/p>
&lt;h2 id="demo">Demo
&lt;/h2>&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/u1J9JrJe1Y0"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06774.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06774_hu_40c881002bab48f1.jpg 480w, https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06774_hu_f0fa57e7f35df413.jpg 1024w"
loading="lazy"
alt="Prototype plugged In"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06786.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06786_hu_df35ab7b2f3caa36.jpg 480w, https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06786_hu_dd7e28b28d94c0e1.jpg 1024w"
loading="lazy"
alt="Prototype Front"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06789.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06789_hu_7126b48f244b56cc.jpg 480w, https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06789_hu_39a4d5a5340723fd.jpg 1024w"
loading="lazy"
alt="Back"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
> &lt;img src="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06790.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06790_hu_50d1c9289b9948de.jpg 480w, https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06790_hu_5aac237d88440a2d.jpg 1024w"
loading="lazy"
alt="Side"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
> &lt;img src="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06791.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06791_hu_6e50a9b0c2c813ae.jpg 480w, https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06791_hu_67ffce4993b624f6.jpg 1024w"
loading="lazy"
alt="Back"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
> &lt;img src="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06792.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06792_hu_ecc24f1653108ff0.jpg 480w, https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/DSC06792_hu_bf4b69e6cfddc084.jpg 1024w"
loading="lazy"
alt="Back"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;h2 id="inspiration">Inspiration
&lt;/h2>&lt;p>I&amp;rsquo;ve taken some inspiration from the popular random module called the Turing Machine.
Also, I&amp;rsquo;ve taken some code from the &lt;a class="link" href="https://github.com/Allen-Synthesis/EuroPi" target="_blank" rel="noopener"
>EuroPi&lt;/a>, specifically the analog reader for the CV inputs and knobs.&lt;/p>
&lt;h2 id="todo">TODO
&lt;/h2>&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Prototype&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Schematic&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> CV input code&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Random triggers&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> A better menu system&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Better logic, moving the rotary encoder while its running will make the sequencer glitch&lt;/li>
&lt;/ul>
&lt;h2 id="features">Features
&lt;/h2>&lt;h3 id="basic-features">Basic features
&lt;/h3>&lt;ul>
&lt;li>128x64 oled screen&lt;/li>
&lt;li>Rotary Encoder&lt;/li>
&lt;li>A random cv sequencer&lt;/li>
&lt;li>A random trigger/gate sequencer&lt;/li>
&lt;li>Trigger length based on clock input&lt;/li>
&lt;li>Output cv quantized based on scale chosen&lt;/li>
&lt;li>4 Analog parameter knobs with inputs&lt;/li>
&lt;/ul>
&lt;h2 id="io">IO
&lt;/h2>&lt;ul>
&lt;li>4 Analog inputs with attenuation and offset knobs (serving as control knobs if no input is connected)&lt;/li>
&lt;li>Clock/trigger input&lt;/li>
&lt;li>Digital input (unused)&lt;/li>
&lt;li>Trigger output&lt;/li>
&lt;li>vOct output&lt;/li>
&lt;/ul>
&lt;h2 id="menu-choices">Menu choices
&lt;/h2>&lt;ul>
&lt;li>Scale/Mode&lt;/li>
&lt;li>CV Probability&lt;/li>
&lt;li>Trigger Probability&lt;/li>
&lt;li>Trigger length (0 to 100% of clock)&lt;/li>
&lt;li>Number of steps (2 to 16 (You can modify the max steps in the code))&lt;/li>
&lt;li>Octaves (the number of octaves it should range from (1 to 5))&lt;/li>
&lt;li>Starting note (note 1 to 12)&lt;/li>
&lt;li>CV sequence erase toggle&lt;/li>
&lt;li>Trigger sequence erase toggle&lt;/li>
&lt;li>Test CV scale/sequence toggle (it will run through the current scale chosen ascending)&lt;/li>
&lt;li>Tuning CV scale/sequence toggle (to help you tune your vco)&lt;/li>
&lt;/ul>
&lt;h2 id="how-it-randomizes">How it randomizes
&lt;/h2>&lt;p>Every high clock pulse, the current step will be changed randomly depending on the probability.&lt;/p>
&lt;p>The algorithm simply does the following:&lt;/p>
&lt;p>It selects a random note from the current scale chosen.
Then it decides if the current step will be overwritten by the random note based on the probability.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">randomly_change_current_step_cv&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># get random index of scale chosen&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">random_scale_index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current_12bit_scale&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># set cv from scale list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">generate_boolean_with_probability&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cv_probability_of_change&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print(&amp;#34;change cv&amp;#34;)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cv_sequence&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">current_step&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">current_12bit_scale&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">random_scale_index&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">randomly_change_step_trigger&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">global&lt;/span> &lt;span class="n">trigger_sequence&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">trig_on_or_off&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">generate_boolean_with_probability&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">trigger_probability_of_change&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">trigger_sequence&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">current_step&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">trig_on_or_off&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">generate_boolean_with_probability&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">probability&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">float&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&amp;gt;&lt;/span> &lt;span class="nb">bool&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> Returns True or False based on the given probability.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :param probability: The probability of returning True, in the range [0, 100].
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :type probability: float
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :return: True with probability `probability`, False otherwise.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> :rtype: bool
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">probability&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="ne">ValueError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Probability must be between 0 and 100&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">100&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">probability&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="schematic">Schematic
&lt;/h2>&lt;p>I used a clone of the Pi Pico (Pi Pico Lite Black 16MB).&lt;/p>
&lt;p>If you don&amp;rsquo;t have it available, you can use an original Pi Pico. You just have to change some pin assignments. The clone I found has an additional ADC pin (GP29).
You can ommit the fourth cv input, you just have to adjust the code.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/pi-pico-random-looping-sequencer-schematic-rev-0.1.0.jpg"
width="3508"
height="2480"
srcset="https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/pi-pico-random-looping-sequencer-schematic-rev-0.1.0_hu_a95fd58c05f55dae.jpg 480w, https://diysynthmnl.github.io/p/pi-pico-random-looping-sequencer/images/pi-pico-random-looping-sequencer-schematic-rev-0.1.0_hu_a03582c0dc8f3a64.jpg 1024w"
loading="lazy"
alt="Schematic"
class="gallery-image"
data-flex-grow="141"
data-flex-basis="339px"
>&lt;/p>
&lt;h2 id="programming-instructions">Programming instructions
&lt;/h2>&lt;h3 id="starting-fresh-preparing-the-pico-for-the-firmware">Starting fresh (Preparing the pico for the firmware)
&lt;/h3>&lt;ol>
&lt;li>Download &lt;a class="link" href="https://learn.adafruit.com/getting-started-with-raspberry-pi-pico-circuitpython/circuitpython#flash-resetting-uf2-3083182" target="_blank" rel="noopener"
>flash_nuke.uf2&lt;/a> from Adafruit.&lt;/li>
&lt;li>While holding down the BOOTSEL button on the Pi Pico, connect the usb cable to your computer.&lt;/li>
&lt;li>It should be visible as a USB drive as RPI-RP2. Copy the downloaded &lt;code>flash_nuke.uf2&lt;/code> into it. This will wipe any firmware in the Pico. Be sure to backup any files in your Pico.&lt;/li>
&lt;/ol>
&lt;h3 id="uploading-mainpy-and-lib">Uploading main.py and lib
&lt;/h3>&lt;p>You can use Thonny IDE or VSCode with the Micropico plugin.&lt;/p>
&lt;h2 id="development-instructions">Development instructions
&lt;/h2>&lt;p>If you need to program the pico while it is connected to eurorack power, you can.&lt;/p>
&lt;ul>
&lt;li>Turn on the module (eurorack power)&lt;/li>
&lt;li>Plug in the usb to the pico (yes it won&amp;rsquo;t damage the pico)&lt;/li>
&lt;/ul>
&lt;h3 id="developing-with-vscode">Developing with VSCode
&lt;/h3>&lt;p>Use VSCode with the plugin MicroPico&lt;/p>
&lt;p>Use the commands while developing:&lt;/p>
&lt;ul>
&lt;li>Delete all files from pico&lt;/li>
&lt;li>Upload project files to pico&lt;/li>
&lt;li>Run&lt;/li>
&lt;/ul>
&lt;h3 id="menu-system">Menu system
&lt;/h3>&lt;p>I cobbled up some code to help me make a menu system for this project. Its still in the early stages of development. I still need to clean it up.
You can take a look at my &lt;code>menu.py&lt;/code> code in the GitHub repo for this project.&lt;/p>
&lt;h4 id="how-the-menu-system-works">How the menu system works
&lt;/h4>&lt;p>SETTING SUBMENUS:&lt;/p>
&lt;p>First, you would have to create instances of submenus in your main program.
Then you can put those instances in a list called &lt;code>submenu_list&lt;/code>.
Lastly, call the &lt;code>set_submenus()&lt;/code>.&lt;/p>
&lt;p>MAKING THE DISPLAY AND ENCODER DO ITS JOB:&lt;/p>
&lt;p>Call &lt;code>loop_main_menu(update_main_program_values_callback=[callback_function])&lt;/code> in a while True loop.
The callback function is for updating the variables used in your main program. It is discussed more in detail below.&lt;/p>
&lt;p>GETTING DATA FROM THE MENU SYSTEM INTO YOUR MAIN PROGRAM:&lt;/p>
&lt;p>This library only handles the &amp;ldquo;front end&amp;rdquo; of your main python program, handling user interaction with the display and the rotary encoder.
It is designed to hold data but you should have variables in your main program so you can access the data easily.
For example, you need to get data from a submenu: you would need to call &lt;code>get_submenu_list()&lt;/code> in order to update the main program&amp;rsquo;s variables.
To help you update your main program&amp;rsquo;s variables from the submenus, you will need to provide a callback function in your main program (example: &lt;code>update_values()&lt;/code>).
This callback function will only be called when a submenu&amp;rsquo;s selected value has been changed (user pressed the encoder button).&lt;/p>
&lt;h2 id="mcp-4725-lookup-table">MCP 4725 lookup table
&lt;/h2>&lt;p>The optimal lowest voltage should not be 0. The MCP4725 cannot output exactly 0v for some reason. Your tuning will not be exact when the value is 0.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>note no&lt;/th>
&lt;th>12 bit value&lt;/th>
&lt;th>voltage output&lt;/th>
&lt;th>keyboard note (example only)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>C&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>68&lt;/td>
&lt;td>0.0830078125&lt;/td>
&lt;td>C#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>136&lt;/td>
&lt;td>0.166015625&lt;/td>
&lt;td>D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td>204&lt;/td>
&lt;td>0.2490234375&lt;/td>
&lt;td>D#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&lt;/td>
&lt;td>272&lt;/td>
&lt;td>0.33203125&lt;/td>
&lt;td>E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5&lt;/td>
&lt;td>340&lt;/td>
&lt;td>0.4150390625&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6&lt;/td>
&lt;td>408&lt;/td>
&lt;td>0.498046875&lt;/td>
&lt;td>F#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>7&lt;/td>
&lt;td>476&lt;/td>
&lt;td>0.5810546875&lt;/td>
&lt;td>G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>8&lt;/td>
&lt;td>544&lt;/td>
&lt;td>0.6640625&lt;/td>
&lt;td>G#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9&lt;/td>
&lt;td>612&lt;/td>
&lt;td>0.7470703125&lt;/td>
&lt;td>A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>10&lt;/td>
&lt;td>680&lt;/td>
&lt;td>0.830078125&lt;/td>
&lt;td>A#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>11&lt;/td>
&lt;td>748&lt;/td>
&lt;td>0.9130859375&lt;/td>
&lt;td>B&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>12&lt;/td>
&lt;td>816&lt;/td>
&lt;td>0.99609375&lt;/td>
&lt;td>C&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>13&lt;/td>
&lt;td>884&lt;/td>
&lt;td>1.079101563&lt;/td>
&lt;td>C#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>14&lt;/td>
&lt;td>952&lt;/td>
&lt;td>1.162109375&lt;/td>
&lt;td>D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>15&lt;/td>
&lt;td>1020&lt;/td>
&lt;td>1.245117188&lt;/td>
&lt;td>D#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>16&lt;/td>
&lt;td>1088&lt;/td>
&lt;td>1.328125&lt;/td>
&lt;td>E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>17&lt;/td>
&lt;td>1156&lt;/td>
&lt;td>1.411132813&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>18&lt;/td>
&lt;td>1224&lt;/td>
&lt;td>1.494140625&lt;/td>
&lt;td>F#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>19&lt;/td>
&lt;td>1292&lt;/td>
&lt;td>1.577148438&lt;/td>
&lt;td>G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>20&lt;/td>
&lt;td>1360&lt;/td>
&lt;td>1.66015625&lt;/td>
&lt;td>G#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>21&lt;/td>
&lt;td>1428&lt;/td>
&lt;td>1.743164063&lt;/td>
&lt;td>A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>22&lt;/td>
&lt;td>1496&lt;/td>
&lt;td>1.826171875&lt;/td>
&lt;td>A#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>23&lt;/td>
&lt;td>1564&lt;/td>
&lt;td>1.909179688&lt;/td>
&lt;td>B&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>24&lt;/td>
&lt;td>1632&lt;/td>
&lt;td>1.9921875&lt;/td>
&lt;td>C&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>25&lt;/td>
&lt;td>1700&lt;/td>
&lt;td>2.075195313&lt;/td>
&lt;td>C#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>26&lt;/td>
&lt;td>1768&lt;/td>
&lt;td>2.158203125&lt;/td>
&lt;td>D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>27&lt;/td>
&lt;td>1836&lt;/td>
&lt;td>2.241210938&lt;/td>
&lt;td>D#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>28&lt;/td>
&lt;td>1904&lt;/td>
&lt;td>2.32421875&lt;/td>
&lt;td>E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>29&lt;/td>
&lt;td>1972&lt;/td>
&lt;td>2.407226563&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>30&lt;/td>
&lt;td>2040&lt;/td>
&lt;td>2.490234375&lt;/td>
&lt;td>F#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>31&lt;/td>
&lt;td>2108&lt;/td>
&lt;td>2.573242188&lt;/td>
&lt;td>G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>32&lt;/td>
&lt;td>2176&lt;/td>
&lt;td>2.65625&lt;/td>
&lt;td>G#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>33&lt;/td>
&lt;td>2244&lt;/td>
&lt;td>2.739257813&lt;/td>
&lt;td>A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>34&lt;/td>
&lt;td>2312&lt;/td>
&lt;td>2.822265625&lt;/td>
&lt;td>A#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>35&lt;/td>
&lt;td>2380&lt;/td>
&lt;td>2.905273438&lt;/td>
&lt;td>B&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>36&lt;/td>
&lt;td>2448&lt;/td>
&lt;td>2.98828125&lt;/td>
&lt;td>C&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>37&lt;/td>
&lt;td>2516&lt;/td>
&lt;td>3.071289063&lt;/td>
&lt;td>C#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>38&lt;/td>
&lt;td>2584&lt;/td>
&lt;td>3.154296875&lt;/td>
&lt;td>D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>39&lt;/td>
&lt;td>2652&lt;/td>
&lt;td>3.237304688&lt;/td>
&lt;td>D#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>40&lt;/td>
&lt;td>2720&lt;/td>
&lt;td>3.3203125&lt;/td>
&lt;td>E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>41&lt;/td>
&lt;td>2788&lt;/td>
&lt;td>3.403320313&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>42&lt;/td>
&lt;td>2856&lt;/td>
&lt;td>3.486328125&lt;/td>
&lt;td>F#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>43&lt;/td>
&lt;td>2924&lt;/td>
&lt;td>3.569335938&lt;/td>
&lt;td>G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>44&lt;/td>
&lt;td>2992&lt;/td>
&lt;td>3.65234375&lt;/td>
&lt;td>G#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>45&lt;/td>
&lt;td>3060&lt;/td>
&lt;td>3.735351563&lt;/td>
&lt;td>A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>46&lt;/td>
&lt;td>3128&lt;/td>
&lt;td>3.818359375&lt;/td>
&lt;td>A#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>47&lt;/td>
&lt;td>3196&lt;/td>
&lt;td>3.901367188&lt;/td>
&lt;td>B&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>48&lt;/td>
&lt;td>3264&lt;/td>
&lt;td>3.984375&lt;/td>
&lt;td>C&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>49&lt;/td>
&lt;td>3332&lt;/td>
&lt;td>4.067382813&lt;/td>
&lt;td>C#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>50&lt;/td>
&lt;td>3400&lt;/td>
&lt;td>4.150390625&lt;/td>
&lt;td>D&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>51&lt;/td>
&lt;td>3468&lt;/td>
&lt;td>4.233398438&lt;/td>
&lt;td>D#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>52&lt;/td>
&lt;td>3536&lt;/td>
&lt;td>4.31640625&lt;/td>
&lt;td>E&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>53&lt;/td>
&lt;td>3604&lt;/td>
&lt;td>4.399414063&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>54&lt;/td>
&lt;td>3672&lt;/td>
&lt;td>4.482421875&lt;/td>
&lt;td>F#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>55&lt;/td>
&lt;td>3740&lt;/td>
&lt;td>4.565429688&lt;/td>
&lt;td>G&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>56&lt;/td>
&lt;td>3808&lt;/td>
&lt;td>4.6484375&lt;/td>
&lt;td>G#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>57&lt;/td>
&lt;td>3876&lt;/td>
&lt;td>4.731445313&lt;/td>
&lt;td>A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>58&lt;/td>
&lt;td>3944&lt;/td>
&lt;td>4.814453125&lt;/td>
&lt;td>A#&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>59&lt;/td>
&lt;td>4012&lt;/td>
&lt;td>4.897460938&lt;/td>
&lt;td>B&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>60&lt;/td>
&lt;td>4080&lt;/td>
&lt;td>4.98046875&lt;/td>
&lt;td>C&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Electric Druid VCDO</title><link>https://diysynthmnl.github.io/p/electric-druid-vcdo/</link><pubDate>Fri, 29 Dec 2023 06:07:14 +0000</pubDate><guid>https://diysynthmnl.github.io/p/electric-druid-vcdo/</guid><description>&lt;img src="https://diysynthmnl.github.io/p/electric-druid-vcdo/images/DSC06823.jpg" alt="Featured image of post Electric Druid VCDO" />&lt;p>&lt;a class="link" href="https://github.com/DIYSynthMNL/Eurorack-Electric-Druid-VCDO1" target="_blank" rel="noopener"
>Module GitHub Link&lt;/a>&lt;/p>
&lt;p>This module is shared under a &lt;a class="link" href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener"
>Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International license&lt;/a>. All credits go to Tom Wiltshire, founder of Electric Druid.&lt;/p>
&lt;h2 id="todo">TODO
&lt;/h2>&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Draw schematic based on the datasheet&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Determine if the regulators need load resistors, I’ll put it in just in case&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Try to change the CV input op amps to MCP6004 compare both TL074 will suffice&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add bitcrush CV in&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add glide CV in&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Try circuit on breadboard&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Build prototype&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Fix prototype glitching issues&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add 100nF cap to pin 10 to ground to clear up glitch issues&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add a 220uF from pin 17 to ground to clear up glitching issues&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Design PCB&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/electric-druid-vcdo/images/DSC06834.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/electric-druid-vcdo/images/DSC06834_hu_df2e16139f24c896.jpg 480w, https://diysynthmnl.github.io/p/electric-druid-vcdo/images/DSC06834_hu_ace614507aa0157b.jpg 1024w"
loading="lazy"
alt="3D Printed panel Prototype Front"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/electric-druid-vcdo/images/DSC06827.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/electric-druid-vcdo/images/DSC06827_hu_689743b49766e825.jpg 480w, https://diysynthmnl.github.io/p/electric-druid-vcdo/images/DSC06827_hu_53110eae6b1da4d4.jpg 1024w"
loading="lazy"
alt="Prototype back view"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>
&lt;img src="https://diysynthmnl.github.io/p/electric-druid-vcdo/images/DSC06828.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/electric-druid-vcdo/images/DSC06828_hu_f6030785992b083f.jpg 480w, https://diysynthmnl.github.io/p/electric-druid-vcdo/images/DSC06828_hu_c2d3927c7fb183b1.jpg 1024w"
loading="lazy"
alt="Prototype back view"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;h2 id="introduction">Introduction
&lt;/h2>&lt;p>I bought one of these chips from Electric Druid. It sounds awesome! This module is my adaptation of the circuit in &lt;a class="link" href="https://electricdruid.net/wp-content/uploads/2015/07/VCDO-Datasheet.pdf" target="_blank" rel="noopener"
>Electric Druid&amp;rsquo;s VCDO chip Datasheet&lt;/a> (p5-8). If you&amp;rsquo;d like to build one yourself, please buy the chip from Electric Druid to support their work. Otherwise, you can program your own PIC chip but you must use it for non-commercial applications.&lt;/p>
&lt;p>Take a look at these other resources from Electric Druid:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://electricdruid.net/voltage-controlled-digital-oscillator-vcdo1/" target="_blank" rel="noopener"
>VCDO page&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://electricdruid.net/product/vcdo-wavetable-oscillator/" target="_blank" rel="noopener"
>VCDO shop page&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="demo">Demo
&lt;/h2>&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/yKsauSLsSGY"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;h2 id="module-features">Module Features
&lt;/h2>&lt;ul>
&lt;li>2 Oscillators&lt;/li>
&lt;li>Main Wavetable Oscillator - smooth transition between 16 waves&lt;/li>
&lt;li>A sub oscillator - incremental transition between 8 sub waves (+1 octave, unison, -1 octave, -2 octaves)&lt;/li>
&lt;li>Has wave bitcrush (can be reduced from 8bit to 1bit) and glide (portamento)&lt;/li>
&lt;/ul>
&lt;h2 id="module-io-and-controls">Module I/O and Controls
&lt;/h2>&lt;p>Inputs and outputs
Inputs&lt;/p>
&lt;ul>
&lt;li>Note CV (0v to 5v)&lt;/li>
&lt;li>FM (10vpp)&lt;/li>
&lt;li>Main wave select (10vpp)&lt;/li>
&lt;li>Sub wave select (10vpp)&lt;/li>
&lt;li>Bitcrush amount (10vpp)&lt;/li>
&lt;li>Glide time amount (10vpp)&lt;/li>
&lt;li>Glide on/off (0v to 5v)&lt;/li>
&lt;/ul>
&lt;p>From top to bottom, left to right:&lt;/p>
&lt;h3 id="tuning-knobs">Tuning knobs
&lt;/h3>&lt;ol>
&lt;li>Course tuning knob&lt;/li>
&lt;li>Fine tuning knob&lt;/li>
&lt;/ol>
&lt;h3 id="control-knobs">Control Knobs
&lt;/h3>&lt;ol>
&lt;li>Bitcrush control knob&lt;/li>
&lt;li>Glide time control knob&lt;/li>
&lt;li>Main oscillator wave select control knob&lt;/li>
&lt;li>Sub oscillator wave select control knob&lt;/li>
&lt;/ol>
&lt;h3 id="input-attenuation-knobs">Input attenuation knobs
&lt;/h3>&lt;ol>
&lt;li>Bitcrush cv input attenuation knob&lt;/li>
&lt;li>Glide time cv input attenuation knob&lt;/li>
&lt;li>Main oscillator wave select cv input attenuation knob&lt;/li>
&lt;li>Sub oscillator wave select cv input attenuation knob&lt;/li>
&lt;/ol>
&lt;h3 id="cv-inputs-10vpp--5v-to-5v">CV inputs (10Vpp, -5v to 5v)
&lt;/h3>&lt;ol>
&lt;li>Bitcrush CV input&lt;/li>
&lt;li>Glide time CV input&lt;/li>
&lt;li>Main oscillator wave select CV input&lt;/li>
&lt;li>Sub oscillator wave select CV input&lt;/li>
&lt;/ol>
&lt;h3 id="io-at-the-bottom-row">IO at the bottom row
&lt;/h3>&lt;ol>
&lt;li>vOct input (0v to 5v, quantised to chromatic scale, from note 0 to 63)&lt;/li>
&lt;li>Glide on/off input (0v to 5v)&lt;/li>
&lt;li>FM input with attenuation knob (10vpp)&lt;/li>
&lt;li>Main oscillator output (10vpp)&lt;/li>
&lt;li>Sub oscillator output (10vpp)&lt;/li>
&lt;/ol>
&lt;h2 id="design-notes">Design Notes
&lt;/h2>&lt;h3 id="adding-cv-to-bitcrush-and-glide">Adding CV to bitcrush and glide
&lt;/h3>&lt;p>The circuit below converts 10vpp +/-5v to 0-5v using a TL074 op amp&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v.png"
width="2560"
height="1600"
srcset="https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v_hu_1251f961bdf8ad95.png 480w, https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v_hu_b7451ef7120bea2.png 1024w"
loading="lazy"
alt="10vpp_to_5v"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="384px"
>&lt;/p>
&lt;p>The circuit below does the following. When you plug in a 10vpp signal, it will bypass RV14, the control pot. When there is nothing plugged in, you can control the parameter using the potentiometer.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v_circuit_2.png"
width="1632"
height="898"
srcset="https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v_circuit_2_hu_3904d634a174fbb4.png 480w, https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v_circuit_2_hu_3d6867c712016267.png 1024w"
loading="lazy"
alt="10vpp_to_5v_circuit_2"
class="gallery-image"
data-flex-grow="181"
data-flex-basis="436px"
>&lt;/p>
&lt;p>The screenshot below is a simulation of the circuit above.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v_circuit_2_sim.png"
width="2560"
height="1600"
srcset="https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v_circuit_2_sim_hu_48cb6763483cafe6.png 480w, https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v_circuit_2_sim_hu_834986a2ea63641d.png 1024w"
loading="lazy"
alt="10vpp_to_5v_circuit_2_sim"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="384px"
>&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Take a look at the circuit from Electric Druid’s LFO. We wouldn&amp;rsquo;t need the circuit above.&lt;/li>
&lt;/ul>
&lt;p>A much better circuit for glide and bitcrush&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v_circuit_final.png"
width="1689"
height="961"
srcset="https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v_circuit_final_hu_6e40b2e002de2beb.png 480w, https://diysynthmnl.github.io/p/electric-druid-vcdo/10vpp_to_5v_circuit_final_hu_535cc4fc686e97ce.png 1024w"
loading="lazy"
alt="10vpp_to_5v_circuit_final"
class="gallery-image"
data-flex-grow="175"
data-flex-basis="421px"
>&lt;/p>
&lt;h2 id="schematic">Schematic
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/electric-druid-vcdo/images/0.1.5_schem_1.jpg"
width="4961"
height="3508"
srcset="https://diysynthmnl.github.io/p/electric-druid-vcdo/images/0.1.5_schem_1_hu_499fc9b6d983228a.jpg 480w, https://diysynthmnl.github.io/p/electric-druid-vcdo/images/0.1.5_schem_1_hu_9977a8987328d922.jpg 1024w"
loading="lazy"
alt="Schematic rev0.1.5 p1"
class="gallery-image"
data-flex-grow="141"
data-flex-basis="339px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/electric-druid-vcdo/images/0.1.5_schem_2.jpg"
width="3508"
height="2480"
srcset="https://diysynthmnl.github.io/p/electric-druid-vcdo/images/0.1.5_schem_2_hu_7925ec32b157e725.jpg 480w, https://diysynthmnl.github.io/p/electric-druid-vcdo/images/0.1.5_schem_2_hu_b4b73979fc4bcf84.jpg 1024w"
loading="lazy"
alt="Schematic rev0.1.5 p2"
class="gallery-image"
data-flex-grow="141"
data-flex-basis="339px"
>&lt;/p>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;p>The prototype I built is one of the most intricate prototype builds I&amp;rsquo;ve done. It still has a glitching pitch issue so be careful in building your own module. Be sure to read the comments in the Electric Druid project page.&lt;/p>
&lt;p>You can build your own module using my 3D printed panel (designed using benjiaomodular&amp;rsquo;s &lt;a class="link" href="https://github.com/benjiaomodular/EuroPanelMaker" target="_blank" rel="noopener"
>EuroPanelMaker&lt;/a>) I tweaked the placement of the IO and controls so they line up with a generic protoboard. You have to cut the protoboard to size using my prefferred method - scoring using a blade.&lt;/p>
&lt;p>Don&amp;rsquo;t hesitate to contact me on my socials if you have any questions or comments about the module!&lt;/p></description></item><item><title>Multi Saturation Module</title><link>https://diysynthmnl.github.io/p/multi-saturation-module/</link><pubDate>Sun, 03 Dec 2023 00:00:00 +0800</pubDate><guid>https://diysynthmnl.github.io/p/multi-saturation-module/</guid><description>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/DSC06849.jpg" alt="Featured image of post Multi Saturation Module" />&lt;p>&lt;a class="link" href="https://github.com/DIYSynthMNL/Eurorack-Multi-Saturation-Module" target="_blank" rel="noopener"
>Module GitHub Link&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_front.jpg"
width="1088"
height="1080"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_front_hu_6bf43099349224c7.jpg 480w, https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_front_hu_af9acebf2c16162b.jpg 1024w"
loading="lazy"
alt="front"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="241px"
> &lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_side.jpg"
width="1088"
height="1080"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_side_hu_2183d3199182e1bc.jpg 480w, https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_side_hu_d8a167d306382d00.jpg 1024w"
loading="lazy"
alt="side"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="241px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_back.jpg"
width="1088"
height="1080"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_back_hu_ae3ef56fd889039b.jpg 480w, https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_back_hu_ff2083dbb5e043a8.jpg 1024w"
loading="lazy"
alt="back"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="241px"
> &lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_back_close.jpg"
width="1088"
height="1080"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_back_close_hu_37e833928c264dbc.jpg 480w, https://diysynthmnl.github.io/p/multi-saturation-module/prototype_module_back_close_hu_28bd7b073575690e.jpg 1024w"
loading="lazy"
alt="back"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="241px"
> &lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/proto_module_back.jpg"
width="1088"
height="1080"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/proto_module_back_hu_a156fa81c018b305.jpg 480w, https://diysynthmnl.github.io/p/multi-saturation-module/proto_module_back_hu_6151c8226695bf98.jpg 1024w"
loading="lazy"
alt="back"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="241px"
>&lt;/p>
&lt;h2 id="some-background">Some background
&lt;/h2>&lt;p>I’m designing a distortion/saturation modular synth module using different methods of distorting audio signals.
This module is a combination of transformer, opto, and clipping distortion/saturation.&lt;/p>
&lt;h2 id="revision-summary">Revision Summary
&lt;/h2>&lt;ul>
&lt;li>Schematic Revision 0.5 - an easier to read schematic - please note that there are some errors in this. The Eurorack power connector pins are backwards. Use this as a reference for the circuit design.&lt;/li>
&lt;li>Schematic Revision 0.6 - multiboard layout (LATEST - working on circuit revisions)&lt;/li>
&lt;li>PCB Revision 0.1 - revising in progress (working on rev 0.2)&lt;/li>
&lt;/ul>
&lt;h2 id="source-of-inspiration">Source of inspiration
&lt;/h2>&lt;h3 id="diyres-colour-modules">DIYRe’s Colour Modules
&lt;/h3>&lt;p>I got some ideas from DIYRe&amp;rsquo;s Colour modules. DIYRe is a company that produces DIY kits for professional audio recording equipment. Some of their product offerings include recording studio rackmount effects.&lt;/p>
&lt;blockquote>
&lt;p>The Colour Format&lt;br>
Real analog plugins.&lt;br>
&lt;a class="link" href="https://www.diyrecordingequipment.com/pages/the-colour-format" target="_blank" rel="noopener"
>https://www.diyrecordingequipment.com/pages/the-colour-format&lt;/a>&lt;/p>&lt;/blockquote>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Colour Module&lt;/td>
&lt;td>What does it do?&lt;/td>
&lt;td>What ideas did you get?&lt;/td>
&lt;td>Link to page&lt;/td>
&lt;td>Schematic&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CTX Transformer Colour&lt;/td>
&lt;td>A transformer saturation module with a discrete opamp and a Cinemag audio transformer which has a 1:1 turns ratio.&lt;/td>
&lt;td>Non-inverting amp to drive the transformer past what it can handle. Resistor before the transformer that isolates the opamp from the transformer.&lt;/td>
&lt;td>&lt;a class="link" href="https://www.diyrecordingequipment.com/products/ctx-cinemag-transformer-colour-mkii" target="_blank" rel="noopener"
>https://www.diyrecordingequipment.com/products/ctx-cinemag-transformer-colour-mkii&lt;/a>&lt;/td>
&lt;td>&lt;a class="link" href="https://cdn.shopify.com/s/files/1/0698/2265/files/CTX_mkII_Schematic.pdf?375" target="_blank" rel="noopener"
>https://cdn.shopify.com/s/files/1/0698/2265/files/CTX_mkII_Schematic.pdf?375&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Colourphone&lt;/td>
&lt;td>A telephone sound emulator. It uses a bandpass filter and a 1:1 turn ratio audio transformer.&lt;/td>
&lt;td>I have a similar transformer which is a 600:600 ohm transformer. Resistor before the transformer that isolates it from the opamp.&lt;/td>
&lt;td>&lt;a class="link" href="https://www.diyrecordingequipment.com/products/colourphone-telephone-distortion-colour" target="_blank" rel="noopener"
>https://www.diyrecordingequipment.com/products/colourphone-telephone-distortion-colour&lt;/a>&lt;/td>
&lt;td>&lt;a class="link" href="https://cdn.shopify.com/s/files/1/0698/2265/files/XQP_Colourphone_Schematic_1.3.pdf?8973696934571457842" target="_blank" rel="noopener"
>https://cdn.shopify.com/s/files/1/0698/2265/files/XQP_Colourphone_Schematic_1.3.pdf?8973696934571457842&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Colourupter&lt;/td>
&lt;td>An opto distortion module that is vactrol based.&lt;/td>
&lt;td>Using a vactrol and the circuit around it. IC1c and IC1d only.&lt;/td>
&lt;td>&lt;a class="link" href="https://www.diyrecordingequipment.com/products/colourupter" target="_blank" rel="noopener"
>https://www.diyrecordingequipment.com/products/colourupter&lt;/a>&lt;/td>
&lt;td>&lt;a class="link" href="https://cdn.shopify.com/s/files/1/0698/2265/files/XQP_Colourupter_Schematic_1.7.pdf?13355729951948932441" target="_blank" rel="noopener"
>https://cdn.shopify.com/s/files/1/0698/2265/files/XQP_Colourupter_Schematic_1.7.pdf?13355729951948932441&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="other-sources">Other sources
&lt;/h3>&lt;ul>
&lt;li>Vactrol wet/dry mix from music thing modular’s spring reverb module
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.musicthing.co.uk/Spring-Reverb/" target="_blank" rel="noopener"
>https://www.musicthing.co.uk/Spring-Reverb/&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Eliot Sound Products &lt;a class="link" href="https://sound-au.com/" target="_blank" rel="noopener"
>https://sound-au.com&lt;/a> - is a website full of audio articles that I’ve learned from. Go search for these articles, they’re great!
&lt;ul>
&lt;li>Designing With Op Amps&lt;/li>
&lt;li>Audio Transformers&lt;/li>
&lt;li>Soft Clipping&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="circuit-design">Circuit Design
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/rev_0.4_schematic.png"
width="1518"
height="1046"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/rev_0.4_schematic_hu_afc162cf9a12d1c8.png 480w, https://diysynthmnl.github.io/p/multi-saturation-module/rev_0.4_schematic_hu_dcde84798f4c5369.png 1024w"
loading="lazy"
alt="rev_0.4_schematic"
class="gallery-image"
data-flex-grow="145"
data-flex-basis="348px"
>&lt;/p>
&lt;ul>
&lt;li>I will update this section soon.&lt;/li>
&lt;/ul>
&lt;h3 id="stages">Stages
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>Input gain stage (buffer only, see design note below)&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/input_buffer.png"
width="399"
height="240"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/input_buffer_hu_1c7b70c940391214.png 480w, https://diysynthmnl.github.io/p/multi-saturation-module/input_buffer_hu_8bbcabdf333cce16.png 1024w"
loading="lazy"
alt="input_buffer"
class="gallery-image"
data-flex-grow="166"
data-flex-basis="399px"
>&lt;/p>
&lt;p>We must take into account the headroom of the op amp. The NE5532 can only output 2 volts less than the supply voltage. So for example, your supply voltage would be +/- 12V, your max output would be 10V based on the image below.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/vopp.png"
width="1532"
height="83"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/vopp_hu_b860d1041cd1add9.png 480w, https://diysynthmnl.github.io/p/multi-saturation-module/vopp_hu_da5f4422727645b9.png 1024w"
loading="lazy"
alt="vopp"
class="gallery-image"
data-flex-grow="1845"
data-flex-basis="4429px"
>&lt;/p>
&lt;p>A buffer would suffice as the input stage. It would be nice to give the transformer more voltage but we wouldn’t be able to amplify the 10Vpp input to 12Vpp unless we use a +/- 15V supply.&lt;/p>
&lt;p>I chose to use an NE5532 Op Amp because I believe it can drive outputs higher than TL07x.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Transformer Saturation&lt;/p>
&lt;p>The transformer distortion works by oversaturating the transformer’s core past what it can handle. The transformer I used would normally be used in line audio signals. A 600:600 ohm transformer. We’re using Eurorack voltage which is around 10vpp so that would oversaturate the transformer.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/transformer_saturation_stage.png"
width="602"
height="337"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/transformer_saturation_stage_hu_b4f9c575eabaf3b0.png 480w, https://diysynthmnl.github.io/p/multi-saturation-module/transformer_saturation_stage_hu_2646089fedf28969.png 1024w"
loading="lazy"
alt="transformer_saturation_stage"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="428px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Vactrol Opto Electronic Saturation&lt;/p>
&lt;p>The transformer’s output was low, I needed to add a non-inverting op amp with gain to bring the levels back to 10vpp for this stage.&lt;/p>
&lt;p>I got this circuit from DIYRe’s Colourupter colour module which uses a Vactrol to clip the signal.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/vactrol_saturation_stage.png"
width="823"
height="378"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/vactrol_saturation_stage_hu_35fe7d0d89331e77.png 480w, https://diysynthmnl.github.io/p/multi-saturation-module/vactrol_saturation_stage_hu_b8de1546b8ed3e1a.png 1024w"
loading="lazy"
alt="vactrol_saturation_stage"
class="gallery-image"
data-flex-grow="217"
data-flex-basis="522px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Soft Clipping Diode Saturation&lt;/p>
&lt;p>I chose to place these diodes after the wet amplifier. It would be softer if I placed it before the U4A. I chained LEDs to the 1N4148s to get a softer clipping effect. LEDs alone would make saw waves looking like square waves.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/diode_clipping_stage.png"
width="270"
height="392"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/diode_clipping_stage_hu_f3f1f0776cb56c10.png 480w, https://diysynthmnl.github.io/p/multi-saturation-module/diode_clipping_stage_hu_51e3cf070de0bd8d.png 1024w"
loading="lazy"
alt="diode_clipping_stage"
class="gallery-image"
data-flex-grow="68"
data-flex-basis="165px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Voltage controlled Vactrol Wet/Dry mix&lt;/p>
&lt;p>I used my handmade Vactrol. I made it using a 5mm diffused red LED and a 5mm LDR enclosed with black heat shrink tubing. I crimped the ends so no light would leak in. 47k works for R17 with my Vactrol.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/wet_dry_mix.png"
width="1055"
height="512"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/wet_dry_mix_hu_8d7811b2c655ce11.png 480w, https://diysynthmnl.github.io/p/multi-saturation-module/wet_dry_mix_hu_e2b5375de43e0375.png 1024w"
loading="lazy"
alt="vactrol_wet_dry_mix"
class="gallery-image"
data-flex-grow="206"
data-flex-basis="494px"
>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="schematic-revisions">Schematic Revisions
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>Revision 0.2&lt;/p>
&lt;ul>
&lt;li>TODO
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Replace R5 with trimmer&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Test wet/dry mix on breadboard&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Input buffer biasing resistor&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Notes
&lt;ul>
&lt;li>The transformer saturation is very subtle on a mono synth&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Revision 0.3&lt;/p>
&lt;ul>
&lt;li>
&lt;p>TODO&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input checked="" disabled="" type="checkbox"> Add gain trimmer to dry signal at U2B&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input checked="" disabled="" type="checkbox"> Scrap the single saturation and add diode clipping and the Colourupter, the transformer alone is too subtle&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;input checked="" disabled="" type="checkbox"> Test output gain stage&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Revision 0.4&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Scrap output auto gain&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> add opto saturation&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> add soft clipping diodes&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Revision 0.5&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Multiboard layout&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Revision 0.6&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Fix amplitude difference on opto sat stage output.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="pcb-design">PCB Design
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/pcb_rev_0.1_white.png"
width="2560"
height="1600"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/pcb_rev_0.1_white_hu_50a079410596c098.png 480w, https://diysynthmnl.github.io/p/multi-saturation-module/pcb_rev_0.1_white_hu_8ab0482745d218b9.png 1024w"
loading="lazy"
alt="pcb_rev_0.1_white"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="384px"
>&lt;/p>
&lt;p>Dec 27, 2023 - Almost satisfied with the board design, rev0.1&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/multi-saturation-module/pcb_rev_0.1.png"
width="2560"
height="1600"
srcset="https://diysynthmnl.github.io/p/multi-saturation-module/pcb_rev_0.1_hu_12c3a8fce4346c99.png 480w, https://diysynthmnl.github.io/p/multi-saturation-module/pcb_rev_0.1_hu_6d2f6cc32715243d.png 1024w"
loading="lazy"
alt="pcb_rev_0.1"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="384px"
>&lt;/p>
&lt;p>Rev 0.1 in black&lt;/p>
&lt;h3 id="pcb-revisions">PCB revisions
&lt;/h3>&lt;ul>
&lt;li>Todo for Revision 0.1
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Ground plane vias&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Front panel ground plane&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Double check hole sizes
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Trimmer&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Double check via sizes&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Round tracks&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Todo for Revision 0.2
&lt;ul>
&lt;li>Front panel
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add keep out zone for led window zone fills for FCU and BCU - I had to Dremel it out for the revision 0.1 front panel board&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Enlarge switch holes for Dailywell switches&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Enlarge trimmer holes&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Change tilt knob silkscreen to “mix”&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Fix amplitude difference on opto sat output. The opto stage attenuates the signal from the transformer too much&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Revision 0.1 Board test notes
&lt;ul>
&lt;li>Voltage tests
&lt;ul>
&lt;li>Power rails after reverse protection diode I used a 1N4007 diode
&lt;ul>
&lt;li>V+ reads about 10V&lt;/li>
&lt;li>V- reads about 11V&lt;/li>
&lt;li>I might need to change the reverse protection diodes to Schottkys&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Music thing modular’s cv wet dry circuit has an optimal input of 0-5V control voltages. If 10Vpp was used, the middle of the cv level pot is zero. Fully clockwise, the cv would be in phase. Fully counter clockwise, the cv is inverted. This is simulated in falstad, the file is included in the falstad folder.&lt;/li>
&lt;li>Gain trim is finicky. Turning on the Opto would attenuate the signal. Maybe this is caused by the variety of the vactrol, I think not all vactrols are equal. Opto gain/amplitude trim might be required. It might be a simple resistor value change within the circuit.&lt;/li>
&lt;li>LEDs are not as bright as I want them.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>AS3310 Voltage Controlled ADSR</title><link>https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/</link><pubDate>Mon, 10 Mar 2025 15:18:15 +0000</pubDate><guid>https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/</guid><description>&lt;img src="https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/DSC06835.jpg" alt="Featured image of post AS3310 Voltage Controlled ADSR" />&lt;p>&lt;a class="link" href="https://github.com/DIYSynthMNL/Eurorack-3310-ADSR" target="_blank" rel="noopener"
>Module GitHub Link&lt;/a>&lt;/p>
&lt;p>This module is licensed under the &lt;a class="link" href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener"
>MIT License&lt;/a>&lt;/p>
&lt;h2 id="todo">TODO
&lt;/h2>&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Schematic&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Build prototype&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> PCB Design&lt;/li>
&lt;/ul>
&lt;h2 id="introduction">Introduction
&lt;/h2>&lt;p>This module is a simple VC ADSR design. The design is based on the chip&amp;rsquo;s datasheet info.&lt;/p>
&lt;h2 id="module-images">Module Images
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/DSC06835.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/DSC06835_hu_2c19efb09bfb0398.jpg 480w, https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/DSC06835_hu_ce5efd994777f4ec.jpg 1024w"
loading="lazy"
alt="Front"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/DSC06838.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/DSC06838_hu_7966694760ec9279.jpg 480w, https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/DSC06838_hu_266421f310f9fb1c.jpg 1024w"
loading="lazy"
alt="Back"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
> &lt;img src="https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/DSC06839.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/DSC06839_hu_d0923341b8909642.jpg 480w, https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/DSC06839_hu_ab716a6aa399e615.jpg 1024w"
loading="lazy"
alt="Side"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;h2 id="demo">Demo
&lt;/h2>&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/UKTFPovOEbg"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;h2 id="module-features">Module Features
&lt;/h2>&lt;p>Each envelope parameter is CV controllable (Attack, Decay, Sustain, Release)&lt;/p>
&lt;h2 id="io-and-controls">I/O and Controls
&lt;/h2>&lt;p>Inputs:&lt;/p>
&lt;ul>
&lt;li>Gate input (0-5v, 0-10v)&lt;/li>
&lt;li>Attack CV input (10vpp)&lt;/li>
&lt;li>Decay CV input (10vpp)&lt;/li>
&lt;li>Sustain CV input (10vpp)&lt;/li>
&lt;li>Release CV input (10vpp)&lt;/li>
&lt;/ul>
&lt;p>Output:&lt;/p>
&lt;ul>
&lt;li>Envelope output (0-5v)&lt;/li>
&lt;/ul>
&lt;p>Controls (knobs):&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Attack input attenuation knob&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Attack offset knob (serves as control knob when no input is connected)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Decay input attenuation knob&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Decay offset knob (serves as control knob when no input is connected)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sustain input attenuation knob&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sustain offset knob (serves as control knob when no input is connected)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Release input attenuation knob&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Release offset knob (serves as control knob when no input is connected)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="design-notes">Design Notes
&lt;/h2>&lt;p>The Attack, Decay, and Release CV inputs are inverting mixers.&lt;/p>
&lt;p>The sustain circuit is a combination of an inverting mixer and an inverting amp with a gain of 1 to invert it back in phase. A schottky diode clamps the positive voltage to +5v.&lt;/p>
&lt;p>Check out the falstad circuit simulation &lt;a class="link" href="https://github.com/DIYSynthMNL/Eurorack-3310-ADSR/blob/main/falstad/ADSR_CV_Circuit" target="_blank" rel="noopener"
>here&lt;/a>&lt;/p>
&lt;h2 id="schematic">Schematic
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/Eurorack-AS3310-ADSR-Schematic-Rev0.1.3.jpg"
width="3307"
height="2339"
srcset="https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/Eurorack-AS3310-ADSR-Schematic-Rev0.1.3_hu_82e1929ce060b76e.jpg 480w, https://diysynthmnl.github.io/p/as3310-voltage-controlled-adsr/images/Eurorack-AS3310-ADSR-Schematic-Rev0.1.3_hu_cd99a011314802d7.jpg 1024w"
loading="lazy"
alt="Schematic"
class="gallery-image"
data-flex-grow="141"
data-flex-basis="339px"
>&lt;/p>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;p>If you&amp;rsquo;d like to build this module, I have provided a 3D printed front panel file in the repo. I used readily available green perfboard. The components should line up with the perfboard&amp;rsquo;s holes. The panel was made using benjiaomodular&amp;rsquo;s &lt;a class="link" href="https://github.com/benjiaomodular/EuroPanelMaker" target="_blank" rel="noopener"
>europanelmaker&lt;/a>.&lt;/p></description></item><item><title>Kikit Multiboard Workflow</title><link>https://diysynthmnl.github.io/p/kikit-multiboard-workflow/</link><pubDate>Fri, 16 Feb 2024 00:00:00 +0800</pubDate><guid>https://diysynthmnl.github.io/p/kikit-multiboard-workflow/</guid><description>&lt;p>KiCad terminal Command&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">kikit&lt;/span> &lt;span class="n">separate&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">source&lt;/span> &lt;span class="s2">&amp;#34;annotation; ref: B3&amp;#34;&lt;/span> &lt;span class="o">^&lt;/span> &lt;span class="s2">&amp;#34;C:\Users\Acer\Desktop\Synth DIY\KiCad Designs\EuroBusboard\EuroBusboard.kicad_pcb&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;C:\Users\Acer\Desktop\Synth DIY\KiCad Designs\EuroBusboard\eurobusboard_jst_8.kicad_pcb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>How to use it?&lt;/p>
&lt;ol>
&lt;li>Open KiCad Command Prompt&lt;/li>
&lt;li>Enter the command&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">kikit&lt;/span> &lt;span class="n">separate&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">source&lt;/span> &lt;span class="s2">&amp;#34;annotation; ref: [Board marker reference (ex. A)]&amp;#34;&lt;/span> &lt;span class="o">^&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;[Path to .kicad_pcb to separate]&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;[Path to save separated .kicad_pcb]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Europi Build</title><link>https://diysynthmnl.github.io/p/europi-build/</link><pubDate>Mon, 15 Jan 2024 12:11:43 +0000</pubDate><guid>https://diysynthmnl.github.io/p/europi-build/</guid><description>&lt;img src="https://diysynthmnl.github.io/p/europi-build/DSC06874.jpg" alt="Featured image of post Europi Build" />&lt;p>&lt;img src="https://diysynthmnl.github.io/p/europi-build/europi_front.jpg"
width="1088"
height="1080"
srcset="https://diysynthmnl.github.io/p/europi-build/europi_front_hu_2cdafe3e77bf5e82.jpg 480w, https://diysynthmnl.github.io/p/europi-build/europi_front_hu_aefeaf2c2a3d014f.jpg 1024w"
loading="lazy"
alt="Europi Built!"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="241px"
> &lt;img src="https://diysynthmnl.github.io/p/europi-build/europi_side.jpg"
width="1088"
height="1080"
srcset="https://diysynthmnl.github.io/p/europi-build/europi_side_hu_2dfb41c50f02741.jpg 480w, https://diysynthmnl.github.io/p/europi-build/europi_side_hu_2c346397eff64a51.jpg 1024w"
loading="lazy"
alt="Side View"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="241px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/europi-build/europi_dissassembled.jpg"
width="1088"
height="1080"
srcset="https://diysynthmnl.github.io/p/europi-build/europi_dissassembled_hu_6372ee81ea14de21.jpg 480w, https://diysynthmnl.github.io/p/europi-build/europi_dissassembled_hu_2610243717f5010e.jpg 1024w"
loading="lazy"
alt="Europi Dissasembled"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="241px"
> &lt;img src="https://diysynthmnl.github.io/p/europi-build/europi_back.jpg"
width="1088"
height="1080"
srcset="https://diysynthmnl.github.io/p/europi-build/europi_back_hu_89f255fa0c678db3.jpg 480w, https://diysynthmnl.github.io/p/europi-build/europi_back_hu_20f51a00fd472eec.jpg 1024w"
loading="lazy"
alt="Back View"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="241px"
> &lt;img src="https://diysynthmnl.github.io/p/europi-build/europi_side_no_panel.jpg"
width="1088"
height="1080"
srcset="https://diysynthmnl.github.io/p/europi-build/europi_side_no_panel_hu_4218d701d1dd62cf.jpg 480w, https://diysynthmnl.github.io/p/europi-build/europi_side_no_panel_hu_7927eacad2d15e36.jpg 1024w"
loading="lazy"
alt="Side View"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="241px"
> &lt;img src="https://diysynthmnl.github.io/p/europi-build/europi_front_no_panel.jpg"
width="1088"
height="1080"
srcset="https://diysynthmnl.github.io/p/europi-build/europi_front_no_panel_hu_cb0469d4ac0ac3d5.jpg 480w, https://diysynthmnl.github.io/p/europi-build/europi_front_no_panel_hu_f83b11d01cdba970.jpg 1024w"
loading="lazy"
alt="Front No Panel"
class="gallery-image"
data-flex-grow="100"
data-flex-basis="241px"
>&lt;/p>
&lt;h2 id="programming-the-europi">Programming the EuroPi
&lt;/h2>&lt;p>&lt;a class="link" href="https://github.com/Allen-Synthesis/EuroPi/blob/main/software/programming_instructions.md" target="_blank" rel="noopener"
>https://github.com/Allen-Synthesis/EuroPi/blob/main/software/programming_instructions.md&lt;/a>&lt;/p>
&lt;h2 id="using-the-smaller-version-of-the-pi-pico">Using the smaller version of the Pi Pico
&lt;/h2>&lt;h3 id="change-pins-on-europipy">Change pins on europi.py
&lt;/h3>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/europi-build/original_pin_assignments.png"
width="289"
height="349"
srcset="https://diysynthmnl.github.io/p/europi-build/original_pin_assignments_hu_3c368eab87d109e3.png 480w, https://diysynthmnl.github.io/p/europi-build/original_pin_assignments_hu_5a61de0a3f82272.png 1024w"
loading="lazy"
alt="Original Europi Pin Assignments"
class="gallery-image"
data-flex-grow="82"
data-flex-basis="198px"
>&lt;/p>
&lt;ul>
&lt;li>I2C OLED pins 0, 1&lt;/li>
&lt;li>Extra I2C pins 2, 3&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Pin assignments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_DIN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">22&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_AIN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">26&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_K1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">27&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_K2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">28&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_B1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_B2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">21&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">17&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV5&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">18&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV6&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">19&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_USB_CONNECTED&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">24&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="original-pi-pico-pinouts">Original Pi Pico Pinouts
&lt;/h3>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/europi-build/pi_pico_pinout.png"
width="1999"
height="1316"
srcset="https://diysynthmnl.github.io/p/europi-build/pi_pico_pinout_hu_64fbb1d776911b54.png 480w, https://diysynthmnl.github.io/p/europi-build/pi_pico_pinout_hu_32cd5df102b40350.png 1024w"
loading="lazy"
alt="Pi Pico Pinout"
class="gallery-image"
data-flex-grow="151"
data-flex-basis="364px"
>&lt;/p>
&lt;h3 id="pi-pico-super-mini-pinout">Pi Pico Super Mini pinout
&lt;/h3>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/europi-build/RP2040-Zero-details-7.jpg"
width="960"
height="1029"
srcset="https://diysynthmnl.github.io/p/europi-build/RP2040-Zero-details-7_hu_69462bc5083441e3.jpg 480w, https://diysynthmnl.github.io/p/europi-build/RP2040-Zero-details-7_hu_36ff58ddc797adcd.jpg 1024w"
loading="lazy"
alt="Pi Pico Super Mini Pinout"
class="gallery-image"
data-flex-grow="93"
data-flex-basis="223px"
>&lt;/p>
&lt;h3 id="edited-europipy-pin-assignments-for-pi-pico-super-mini-to-test">Edited europi.py pin assignments for Pi Pico Super Mini (to test)
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Pin assignments&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_DIN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">6&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_AIN&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">26&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_K1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">27&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_K2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">28&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_B1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_B2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">9&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV3&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">11&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV4&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">12&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV5&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">13&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_CV6&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">14&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PIN_USB_CONNECTED&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">24&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="oled">OLED
&lt;/h4>&lt;ul>
&lt;li>SDA - GP0&lt;/li>
&lt;li>SCL - GP1&lt;/li>
&lt;/ul>
&lt;h4 id="extra-i2c-pins">Extra I2C pins
&lt;/h4>&lt;ul>
&lt;li>Extra I2C 2, 3&lt;/li>
&lt;/ul>
&lt;h2 id="how-does-the-outputs-work">How does the outputs work?
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/europi-build/europi_pwm_output_circuit.png"
width="1800"
height="1356"
srcset="https://diysynthmnl.github.io/p/europi-build/europi_pwm_output_circuit_hu_e0c7156abc17a819.png 480w, https://diysynthmnl.github.io/p/europi-build/europi_pwm_output_circuit_hu_2901ccb7c79ec0cd.png 1024w"
loading="lazy"
alt="Europi output circuit"
class="gallery-image"
data-flex-grow="132"
data-flex-basis="318px"
>&lt;/p>
&lt;p>How I understand it:&lt;/p>
&lt;ul>
&lt;li>The Pi Pico outputs a 100kHz PWM pulse&lt;/li>
&lt;li>The output circuit filters the pulses like a DAC would do it using an RC filter.&lt;/li>
&lt;li>When the pulse width is low (0%) the voltage is low&lt;/li>
&lt;li>When the pulse width is high (100%) the voltage is high&lt;/li>
&lt;/ul>
&lt;h2 id="mcp6004-pinout">MCP6004 Pinout
&lt;/h2>&lt;p>VDD = POSITIVE, 5v
VSS = NEGATIVE, 0v or GND&lt;/p></description></item><item><title>My Kicad Board Setup Settings</title><link>https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/</link><pubDate>Mon, 01 Jan 2024 00:00:00 +0800</pubDate><guid>https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/</guid><description>&lt;img src="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/1.png" alt="Featured image of post My Kicad Board Setup Settings" />&lt;h2 id="board-stackup---physical-stackup">Board Stackup - Physical stackup
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/1.png"
width="987"
height="590"
srcset="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/1_hu_46f1e08c5729f5b0.png 480w, https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/1_hu_8d1a44ebeb265bdc.png 1024w"
loading="lazy"
alt="board_setup_1"
class="gallery-image"
data-flex-grow="167"
data-flex-basis="401px"
>&lt;/p>
&lt;h2 id="board-stackup---board-finish">Board Stackup - Board Finish
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/2.png"
width="986"
height="586"
srcset="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/2_hu_1a061c0227cc37b9.png 480w, https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/2_hu_8c9185c1c7ba8c4c.png 1024w"
loading="lazy"
alt="board_setup_2"
class="gallery-image"
data-flex-grow="168"
data-flex-basis="403px"
>&lt;/p>
&lt;h2 id="board-stackup---solder-maskpaste">Board Stackup - Solder Mask/Paste
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/3.png"
width="988"
height="594"
srcset="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/3_hu_edda6bb63073ec1a.png 480w, https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/3_hu_d5446a87f13e2c8.png 1024w"
loading="lazy"
alt="board_setup_3"
class="gallery-image"
data-flex-grow="166"
data-flex-basis="399px"
>&lt;/p>
&lt;h2 id="text--graphics---defaults">Text &amp;amp; Graphics - Defaults
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/4.png"
width="1095"
height="590"
srcset="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/4_hu_a1eba0e35b879bd7.png 480w, https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/4_hu_3fe15ee4441ba6a0.png 1024w"
loading="lazy"
alt="board_setup_4"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="445px"
>&lt;/p>
&lt;h2 id="design-rules---constraints">Design Rules - Constraints
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/5.png"
width="1100"
height="588"
srcset="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/5_hu_63f32e9593c70355.png 480w, https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/5_hu_f8c0853cd8fc8a50.png 1024w"
loading="lazy"
alt="board_setup_5"
class="gallery-image"
data-flex-grow="187"
data-flex-basis="448px"
>&lt;/p>
&lt;h2 id="design-rules---pre-defined-sizes">Design Rules - Pre-defined Sizes
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/6.png"
width="1102"
height="589"
srcset="https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/6_hu_9e20ea767670f5b8.png 480w, https://diysynthmnl.github.io/p/my-kicad-board-setup-settings/6_hu_f2c7f4c91d00db44.png 1024w"
loading="lazy"
alt="board_setup_6"
class="gallery-image"
data-flex-grow="187"
data-flex-basis="449px"
>&lt;/p></description></item><item><title>AS2164 Quad Exponential VCA</title><link>https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/</link><pubDate>Fri, 29 Dec 2023 06:07:14 +0000</pubDate><guid>https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/</guid><description>&lt;img src="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/DSC06842.jpg" alt="Featured image of post AS2164 Quad Exponential VCA" />&lt;p>&lt;a class="link" href="https://github.com/DIYSynthMNL/Eurorack-2164-Quad-Exponential-VCA" target="_blank" rel="noopener"
>Module GitHub Repo&lt;/a>&lt;/p>
&lt;h2 id="todo">TODO
&lt;/h2>&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Schematic&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Prototype&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> PCB Design&lt;/li>
&lt;/ul>
&lt;h2 id="introduction">Introduction
&lt;/h2>&lt;p>This module is a simple Quad VCA design. The design is based on the chip’s datasheet info.&lt;/p>
&lt;h2 id="module-images">Module Images
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/DSC06842.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/DSC06842_hu_3df72ab3c2611f22.jpg 480w, https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/DSC06842_hu_2d14c8fc440938f7.jpg 1024w"
loading="lazy"
alt="Front"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/DSC06846.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/DSC06846_hu_928d32ef840bf901.jpg 480w, https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/DSC06846_hu_678ea5a4ed3df872.jpg 1024w"
loading="lazy"
alt="Back"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
> &lt;img src="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/DSC06847.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/DSC06847_hu_9039a26fee576a48.jpg 480w, https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/DSC06847_hu_cd3641caa6fe5ae1.jpg 1024w"
loading="lazy"
alt="Side"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;h2 id="demo">Demo
&lt;/h2>&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/t1I3HN3v_0g"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;h2 id="module-features">Module Features
&lt;/h2>&lt;p>Four exponential voltage controlled VCAs.&lt;/p>
&lt;p>Each CV input is normalled to the next. CV1&amp;gt;CV2&amp;gt;CV3&amp;gt;CV4
Each Signal input is normalled to the next. IN1&amp;gt;IN2&amp;gt;IN3&amp;gt;IN4&lt;/p>
&lt;p>The 4th output jack can be switched to either the 4th VCA output or the mix output using a jumper.&lt;/p>
&lt;h2 id="io-and-controls">I/O and Controls
&lt;/h2>&lt;p>Each VCA channel will have:&lt;/p>
&lt;ul>
&lt;li>Control voltage input (10vpp)&lt;/li>
&lt;li>Input attenuation knob&lt;/li>
&lt;li>Control (when no cv) / offset knob (when cv signal is present)&lt;/li>
&lt;li>Signal input (audio or CV signals)&lt;/li>
&lt;li>Signal output&lt;/li>
&lt;/ul>
&lt;h2 id="design-notes">Design Notes
&lt;/h2>&lt;h3 id="designing-the-cv-input-circuit">Designing the cv input circuit
&lt;/h3>&lt;p>&lt;a class="link" href="https://www.analog.com/media/en/technical-documentation/data-sheets/SSM2164.pdf" target="_blank" rel="noopener"
>https://www.analog.com/media/en/technical-documentation/data-sheets/SSM2164.pdf&lt;/a>&lt;/p>
&lt;p>Control voltage and gain/attenuation&lt;/p>
&lt;ul>
&lt;li>Unity gain = 0v control voltage&lt;/li>
&lt;li>-100dB of attenuation = +5v control voltage&lt;/li>
&lt;/ul>
&lt;p>With that, a control voltage of 0 to 5v is optimal. We can just invert the input using an inverting op amp.&lt;/p>
&lt;p>Another design decision that I would like to add to the module is normalling both cv and audio inputs to the next vca. I1&amp;gt;I2&amp;gt;I3&amp;gt;I4, CV1&amp;gt;CV2&amp;gt;CV3&amp;gt;CV4 when nothing is connected to multiply whatever is connected to the first input.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/2164_power_rail_failure.png"
width="948"
height="1297"
srcset="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/2164_power_rail_failure_hu_87f244218a92f493.png 480w, https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/2164_power_rail_failure_hu_25338ebde41ef6c0.png 1024w"
loading="lazy"
alt="2164_power_rail_failure"
class="gallery-image"
data-flex-grow="73"
data-flex-basis="175px"
>&lt;/p>
&lt;p>Protection from no negative power supply&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/2164_cv_to_db_range.png"
width="805"
height="66"
srcset="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/2164_cv_to_db_range_hu_a5313f4ebb1ed052.png 480w, https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/2164_cv_to_db_range_hu_37f627dec281c466.png 1024w"
loading="lazy"
alt="2164_cv_to_db_range"
class="gallery-image"
data-flex-grow="1219"
data-flex-basis="2927px"
>&lt;/p>
&lt;h3 id="using-the-ssi-2164-datasheet-cv-input-circuit">Using the SSI 2164 datasheet CV input circuit
&lt;/h3>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/0_to_5v_exponential_control_circuit.png"
width="874"
height="512"
srcset="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/0_to_5v_exponential_control_circuit_hu_aaccc24656249883.png 480w, https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/0_to_5v_exponential_control_circuit_hu_9294ea12b9718f.png 1024w"
loading="lazy"
alt="0_to_5v_exponential_control_circuit"
class="gallery-image"
data-flex-grow="170"
data-flex-basis="409px"
>&lt;/p>
&lt;p>2164 chip voltage and attenuation relationship (Inverse) based on the ssi2164 datasheet&lt;/p>
&lt;ul>
&lt;li>3.4V = Mute&lt;/li>
&lt;li>0V = unity gain
Datasheet circuit&lt;/li>
&lt;li>sums, inverts, attenuates the control voltage input&lt;/li>
&lt;/ul>
&lt;h3 id="falstad-simulation-link">Falstad simulation link
&lt;/h3>&lt;p>&lt;a class="link" href="https://github.com/DIYSynthMNL/Eurorack-2164-Quad-Exponential-VCA/tree/main/falstad" target="_blank" rel="noopener"
>Falstad Link&lt;/a>&lt;/p>
&lt;h3 id="resources">Resources
&lt;/h3>&lt;ul>
&lt;li>&lt;a class="link" href="http://www.sdiy.org/philgallo/mgbvca.html" target="_blank" rel="noopener"
>http://www.sdiy.org/philgallo/mgbvca.html&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://doepfer.de/a1324.htm" target="_blank" rel="noopener"
>https://doepfer.de/a1324.htm&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://modwiggler.com/forum/viewtopic.php?t=96486" target="_blank" rel="noopener"
>https://modwiggler.com/forum/viewtopic.php?t=96486&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://electronic-sea.net/SSM2164.html" target="_blank" rel="noopener"
>http://electronic-sea.net/SSM2164.html&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.amazingsynth.com/parts/ssi2164/ssi2164-datasheet.pdf" target="_blank" rel="noopener"
>https://www.amazingsynth.com/parts/ssi2164/ssi2164-datasheet.pdf&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="schematic">Schematic
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/Eurorack-2164-Quad-Exponential-VCA-Schematic-Rev0.1.4.jpg"
width="3307"
height="2339"
srcset="https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/Eurorack-2164-Quad-Exponential-VCA-Schematic-Rev0.1.4_hu_c29d4dc20f626400.jpg 480w, https://diysynthmnl.github.io/p/as2164-quad-exponential-vca/images/Eurorack-2164-Quad-Exponential-VCA-Schematic-Rev0.1.4_hu_cd38352e2cc15bf2.jpg 1024w"
loading="lazy"
alt="Schematic"
class="gallery-image"
data-flex-grow="141"
data-flex-basis="339px"
>&lt;/p>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;p>If you&amp;rsquo;d like to build this module, I have provided a 3D printed front panel file in the repo. I used readily available green perfboard. The components should line up with the perfboard&amp;rsquo;s holes. The panel was made using benjiaomodular&amp;rsquo;s &lt;a class="link" href="https://github.com/benjiaomodular/EuroPanelMaker" target="_blank" rel="noopener"
>europanelmaker&lt;/a>.&lt;/p></description></item><item><title>AS3320 VCF</title><link>https://diysynthmnl.github.io/p/as3320-vcf/</link><pubDate>Fri, 29 Dec 2023 06:07:14 +0000</pubDate><guid>https://diysynthmnl.github.io/p/as3320-vcf/</guid><description>&lt;img src="https://diysynthmnl.github.io/p/as3320-vcf/images/DSC06861.jpg" alt="Featured image of post AS3320 VCF" />&lt;p>&lt;a class="link" href="https://github.com/DIYSynthMNL/Eurorack-3320-VCF" target="_blank" rel="noopener"
>Module GitHub Link&lt;/a>&lt;/p>
&lt;h2 id="todo">TODO
&lt;/h2>&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Schematic&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Prototype&lt;/li>
&lt;li>PCB Design&lt;/li>
&lt;/ul>
&lt;h2 id="introduction">Introduction
&lt;/h2>&lt;p>This module is a Low Pass VCF using the AS3320 chip I bought from Electric Druid.&lt;/p>
&lt;h2 id="module-images">Module Images
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as3320-vcf/images/DSC06861.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/as3320-vcf/images/DSC06861_hu_ac07170cf66b7f4.jpg 480w, https://diysynthmnl.github.io/p/as3320-vcf/images/DSC06861_hu_57624e598a557f36.jpg 1024w"
loading="lazy"
alt="Front"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as3320-vcf/images/DSC06863.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/as3320-vcf/images/DSC06863_hu_c00a7f61623ca0ba.jpg 480w, https://diysynthmnl.github.io/p/as3320-vcf/images/DSC06863_hu_dc094cc9a47c8448.jpg 1024w"
loading="lazy"
alt="Back"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
> &lt;img src="https://diysynthmnl.github.io/p/as3320-vcf/images/DSC06864.jpg"
width="6026"
height="4024"
srcset="https://diysynthmnl.github.io/p/as3320-vcf/images/DSC06864_hu_149be57ccda33210.jpg 480w, https://diysynthmnl.github.io/p/as3320-vcf/images/DSC06864_hu_a17178a9d2ebaf70.jpg 1024w"
loading="lazy"
alt="Side"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;h2 id="demo">Demo
&lt;/h2>&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/V5NmFUjbHUY"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;h2 id="module-features">Module Features
&lt;/h2>&lt;h2 id="design-notes">Design Notes
&lt;/h2>&lt;h3 id="resources">Resources
&lt;/h3>&lt;ul>
&lt;li>&lt;a class="link" href="https://www.coolaudio.com/docs/Cool%20Audio_Data_Sheet_V3320_VCF.pdf" target="_blank" rel="noopener"
>V3320 datasheet from cool audio&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://electricdruid.net/wp-content/uploads/2017/06/AS3320.pdf" target="_blank" rel="noopener"
>AS3320 datasheet&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://electricdruid.net/cem3320-filter-designs/" target="_blank" rel="noopener"
>Electric Druid&amp;rsquo;s article about cem3320 filter designs&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://electricdruid.net/multimode-filters-part-1-reconfigurable-filters/" target="_blank" rel="noopener"
>Electric Druid article about reconfigurable filters&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://electricdruid.net/multimode-filters-part-2-pole-mixing-filters/" target="_blank" rel="noopener"
>Electric Druid article about pole mixing filters&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.eddybergman.com/2020/03/synthesizer-build-part-23-digisound-80.html" target="_blank" rel="noopener"
>Eddy Bergman&amp;rsquo;s digisound 80 build&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://note.com/solder_state/n/n372399e1a0f2" target="_blank" rel="noopener"
>Hagiwo’s circuit&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="reddit-help-question">Reddit help question
&lt;/h3>&lt;blockquote>
&lt;p>Eurorack 3320 Low Pass VCF Design Help Needed: Electrolytics for AC Coupling? And some other design questions.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as3320-vcf/ac_coupling_cap.png"
width="2066"
height="1160"
srcset="https://diysynthmnl.github.io/p/as3320-vcf/ac_coupling_cap_hu_5e28439515948748.png 480w, https://diysynthmnl.github.io/p/as3320-vcf/ac_coupling_cap_hu_92dd73f3b8ca520a.png 1024w"
loading="lazy"
alt="ac_coupling_cap"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="427px"
>&lt;/p>
&lt;p>Hi there! I’m designing a Eurorack 3320 LP VCF based on the AS3320 chips I got from Electric Druid. I’ve tried my best to research before asking here but I came up sort of knowledge. I’d like to ask for your help! I’ve got a small quantity of these AS chips and I want to build them into Eurorack modules as correct as possible.
The datasheet for the 3320 uses an electrolytic cap on its output. I’ve read that there are downsides when using (polarized capacitors) &lt;a class="link" href="https://northcoastsynthesis.com/news/electrolytics-for-ac-coupling/" target="_blank" rel="noopener"
>electrolytics for AC coupling&lt;/a>.
One suggestion that the article said is this: “Use two polarized electrolytic capacitors back to back, with or without some kind of DC bias applied to the centre, or parallel diodes that attempt to limit reverse voltage.”
I’m not quite sure what’s the best way to handle this.
&lt;a class="link" href="https://github.com/DIYSynthMNL/Eurorack-3320-VCF/blob/main/Schematic%20PDFs/3320-VCF-Schematic-Rev0.1.0.pdf" target="_blank" rel="noopener"
>My current schematic&lt;/a> applying the two polarized capacitors back to back.
Some other questions that popped up in my head:&lt;/p>
&lt;ol>
&lt;li>Based on the datasheet circuit, the output of the 3320 is DC (0V to VCC*0.43)?&lt;/li>
&lt;li>Should the 3320’s audio input be AC coupled as well?&lt;/li>
&lt;li>What voltages does the 3320 expect at its audio inputs?&lt;/li>
&lt;li>Circuits I saw online have inverting buffers before the 3320’s audio input. Why is this necessary? Why invert them?&lt;/li>
&lt;/ol>
&lt;p>I appreciate the help!&lt;/p>
&lt;p>u/halifax&amp;rsquo;s reply:&lt;/p>
&lt;ol>
&lt;li>The datasheet shows an output DC offset of between 5 V to 9 V with a typical value of 6.5 V with +-15V supply and 0 V input.&lt;/li>
&lt;li>I haven&amp;rsquo;t seen AC coupling on the Mutable Ripples or Befaco BF-22. It seems that the common practice is to not AC couple for general inputs in Eurorack low pass filters.&lt;/li>
&lt;li>The 3320 input is basically an Operational Transconductance Amplifier (OTA) which has a current input. Pin 1 is basically at ground. There is a hard current limit on the chip of 40mA for any pin. With the 91k input resistor and assuming a +-5V VCO input you get a really small current of around +- 0.055 mA.&lt;/li>
&lt;li>Generally you want to keep your pass band (e.g. the part below the cutoff of a low pass) to be in phase with your original signal. If you are looking at snippets of some larger schematic there may be an inverting stage upstream that they are inverting back from. Something like an inverting mixer that combines a few signals that needs to be inverted back again so that the output is in phase with the input signal.
On your schematic I would only include the AC coupling before the Pro-one output buffer and since you know that it&amp;rsquo;s positively biased you don&amp;rsquo;t need the back-to-back caps. The feedback signal needs to be AC coupled. I would skip the inverter input, input AC coupling and change the output inverter to a buffer and get rid of that AC coupling since that is handled in the previous stage.&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;h2 id="schematic">Schematic
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as3320-vcf/images/3320-VCF_Schematic-Rev-0.1.5_3.jpg"
width="3307"
height="2339"
srcset="https://diysynthmnl.github.io/p/as3320-vcf/images/3320-VCF_Schematic-Rev-0.1.5_3_hu_60f367150acd82b8.jpg 480w, https://diysynthmnl.github.io/p/as3320-vcf/images/3320-VCF_Schematic-Rev-0.1.5_3_hu_62cae2a93f584b92.jpg 1024w"
loading="lazy"
alt="Schematic: core"
class="gallery-image"
data-flex-grow="141"
data-flex-basis="339px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as3320-vcf/images/3320-VCF_Schematic-Rev-0.1.5_2.jpg"
width="2339"
height="1654"
srcset="https://diysynthmnl.github.io/p/as3320-vcf/images/3320-VCF_Schematic-Rev-0.1.5_2_hu_11c8cb6b4b7d1cb4.jpg 480w, https://diysynthmnl.github.io/p/as3320-vcf/images/3320-VCF_Schematic-Rev-0.1.5_2_hu_31bacff9cdd61459.jpg 1024w"
loading="lazy"
alt="Schematic: controls"
class="gallery-image"
data-flex-grow="141"
data-flex-basis="339px"
>&lt;/p>
&lt;h2 id="conclusion">Conclusion
&lt;/h2>&lt;p>If you&amp;rsquo;d like to build this module, I have provided a 3D printed front panel file in the repo. I used readily available green perfboard. The components should line up with the perfboard&amp;rsquo;s holes. The panel was made using benjiaomodular&amp;rsquo;s &lt;a class="link" href="https://github.com/benjiaomodular/EuroPanelMaker" target="_blank" rel="noopener"
>europanelmaker&lt;/a>.&lt;/p></description></item><item><title>AS3330 Dual Lin/Exp Vca</title><link>https://diysynthmnl.github.io/p/as3330-dual-lin/exp-vca/</link><pubDate>Fri, 29 Dec 2023 06:07:14 +0000</pubDate><guid>https://diysynthmnl.github.io/p/as3330-dual-lin/exp-vca/</guid><description>&lt;p>&lt;a class="link" href="https://github.com/DIYSynthMNL/Eurorack-3330-Dual-Lin-Exp-VCA" target="_blank" rel="noopener"
>Module GitHub Repo&lt;/a>&lt;/p>
&lt;h2 id="some-background">Some background
&lt;/h2>&lt;p>The AS3330 is a dual linear/exponential VCA.
The Eurorack module should perform as follows:&lt;/p>
&lt;ul>
&lt;li>10Vpp signal inputs&lt;/li>
&lt;li>10Vpp signal outputs&lt;/li>
&lt;li>Designed to be used with envelope generators or LFOs
&lt;ul>
&lt;li>Ranging from 0V-5V, 0V-10V, and 10Vpp CV signals&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="datasheet-and-digisound-80-9-circuit-design">Datasheet and Digisound 80-9 Circuit Design
&lt;/h2>&lt;p>Refer to the datasheet diagram which I have drawn for the commentary below. I took some explanations from the Digisound 80-9 module documentation. The Digisound 80-9 has nice explanations on how the 3330 chip works. I’ve used ohms law and voltage divider calculators to make sense of the datasheet electrical characteristics and circuit.&lt;/p>
&lt;h3 id="signal-inputs">Signal inputs
&lt;/h3>&lt;ul>
&lt;li>pin 4 and 13&lt;/li>
&lt;li>10Vpp&lt;/li>
&lt;li>A current input&lt;/li>
&lt;li>A summing node&lt;/li>
&lt;li>Uses 100K resistors to convert an input voltage into an input current&lt;/li>
&lt;li>The Digisound 80-9 circuit added compensation resistor and cap. And a diode to prevent latch up problems.&lt;/li>
&lt;/ul>
&lt;h3 id="signal-outputs">Signal outputs
&lt;/h3>&lt;ul>
&lt;li>pin 1 and 16&lt;/li>
&lt;li>should be 10Vpp&lt;/li>
&lt;li>A current output
&lt;ul>
&lt;li>Uses a transimpedance amplifier configuration to convert output current into output voltage
&lt;ul>
&lt;li>If the output is lower or higher than 10Vpp I will experiment with the 51K feedback resistor&lt;/li>
&lt;li>Based on the Digisound circuit. The 51K resistor sets the maximum gain to 0.4.&lt;/li>
&lt;li>I used a 100K resistor for the feedback resistor to get the same voltage output from the input.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="control-voltage-inputs">Control voltage inputs
&lt;/h3>&lt;ul>
&lt;li>Linear inputs
&lt;ul>
&lt;li>pin 7 and 12&lt;/li>
&lt;li>0 to 10V based on the datasheet circuit (through the resistor)
&lt;ul>
&lt;li>0V = max attenuation&lt;/li>
&lt;li>10V = unity gain&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Icl = 100uA at 10V through the 100K resistor&lt;/li>
&lt;li>A current input
&lt;ul>
&lt;li>The 100K resistor converts the input voltage into an input current&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>A summing node
&lt;ul>
&lt;li>Would be able to add more control inputs like AM (Digisound 80-9) through a resistor&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>A compensation capacitor connected to the VG pin prevents the log converter from oscillating when the gain of the linear control input is below -80dB (Digisound 80-9)
&lt;ul>
&lt;li>1nF or larger&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The input must be normalled to VCC through a jack in order to use one of the other (linear or exponential). If one is zero, the gain will be zero regardless of the voltage on the other (Digisound 80-9)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Exponential inputs
&lt;ul>
&lt;li>pin 6 and 14&lt;/li>
&lt;li>-1V to 10V based on the datasheet circuit (through the resistor divider)
&lt;ul>
&lt;li>0V = unity gain&lt;/li>
&lt;li>10V = max attenuation&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>A voltage input (unverified)
&lt;ul>
&lt;li>A voltage divider brings down the input voltage (33K and 1K).
&lt;ul>
&lt;li>@10V, Vce would be 294.12 mV&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Based on the Digisound circuit. The exponential input should be inverted first to increase gain by increasing the control voltage. A 0V input should mute the signal, and a 10V input should be at unity gain. That would give you another summing node so that you can add more control inputs through resistors.&lt;/li>
&lt;li>The input must be normalled to VCC through a jack in order to use one of the other (linear or exponential). If one is zero, the gain will be zero regardless of the voltage on the other (Digisound 80-9)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="gain-inputs">Gain inputs
&lt;/h3>&lt;ul>
&lt;li>pin 2 and 15&lt;/li>
&lt;li>Based on the datasheet circuit, a resistor is connected to VCC to provide a reference current. A 100uA reference current is implied.
&lt;ul>
&lt;li>RB = 150K at +15V&lt;/li>
&lt;li>RB = 120K at +12V&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>100uA produces good scale accuracy (Digisound 80-9)&lt;/li>
&lt;/ul>
&lt;h3 id="distortion-trim-input">Distortion trim input
&lt;/h3>&lt;ul>
&lt;li>pin 3 and 17&lt;/li>
&lt;li>I currently don’t see any information on the datasheet. It’s just connected to ground.&lt;/li>
&lt;li>In the Digisound 80-9 documentation, it uses a trimmer. Said to reduce distortion. Feedthrough would be affected though as it was said. I’m not really familiar with feedthrough yet.&lt;/li>
&lt;/ul>
&lt;h3 id="idle-input">IDLE input
&lt;/h3>&lt;ul>
&lt;li>pin 8&lt;/li>
&lt;li>Variable operating characteristics. Class A to Class B.&lt;/li>
&lt;li>A 6.8K resistor would set it to Class AB (datasheet)&lt;/li>
&lt;li>A 68K resistor would set it to Class A (datasheet)&lt;/li>
&lt;li>A 767K resistor would set it to Class B (datasheet)&lt;/li>
&lt;li>Good balance between distortion, bandwidth and control voltage feedthrough (Digisound 80-9)&lt;/li>
&lt;/ul>
&lt;h3 id="power-inputs">Power inputs
&lt;/h3>&lt;ul>
&lt;li>VCC+
&lt;ul>
&lt;li>Max +18V in relation to GND&lt;/li>
&lt;li>+12V is safe&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>VEE-
&lt;ul>
&lt;li>Max -6V in relation to GND&lt;/li>
&lt;li>Current limiting resistor required for VEE voltages greater than -6V
&lt;ul>
&lt;li>Based on the datasheet
&lt;ul>
&lt;li>At -15V with a resistor of 680R, the current would be 22mA&lt;/li>
&lt;li>So for -12V we could aim less than or equal to 22mA (ohms law calculation)
&lt;ul>
&lt;li>I think a 560R resistor would be ok (21.4mA)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Can use a -5V regulator with no current limiting resistors needed&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="resources">Resources
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://electro-music.com/forum/phpbb-files/203_006_vca3330_schematic_119.pdf" target="_blank" rel="noopener"
>https://electro-music.com/forum/phpbb-files/203_006_vca3330_schematic_119.pdf&lt;/a>&lt;/li>
&lt;li>Digisound 80-9&lt;/li>
&lt;li>&lt;a class="link" href="http://www.geofex.com/Article_Folders/panner.pdf" target="_blank" rel="noopener"
>http://www.geofex.com/Article_Folders/panner.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.analog.com/media/en/technical-documentation/application-notes/an148fa.pdf" target="_blank" rel="noopener"
>https://www.analog.com/media/en/technical-documentation/application-notes/an148fa.pdf&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="circuit-design">Circuit Design
&lt;/h2>&lt;h3 id="design-inspiration">Design inspiration
&lt;/h3>&lt;p>I took some inspiration from Intelligel’s Quad VCA module. It features four VCAs that can have a linear or exponential response. Its response can be tuned to anything in between linear and exponential. The level knob controls the CV offset so that you could use a wide range of voltage signals - bipolar or unipolar. The CV input can also be attenuated using a knob.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as3330-dual-lin/exp-vca/lin_exp_cv_circuit_sim.png"
width="2560"
height="1600"
srcset="https://diysynthmnl.github.io/p/as3330-dual-lin/exp-vca/lin_exp_cv_circuit_sim_hu_c17107d92124254f.png 480w, https://diysynthmnl.github.io/p/as3330-dual-lin/exp-vca/lin_exp_cv_circuit_sim_hu_44e4c2197dc53ce9.png 1024w"
loading="lazy"
alt="lin_exp_cv_circuit_sim"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="384px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/as3330-dual-lin/exp-vca/bi_color_led_cv_input_driver.png"
width="760"
height="725"
srcset="https://diysynthmnl.github.io/p/as3330-dual-lin/exp-vca/bi_color_led_cv_input_driver_hu_3d5c159521ee644e.png 480w, https://diysynthmnl.github.io/p/as3330-dual-lin/exp-vca/bi_color_led_cv_input_driver_hu_c3b42105ae584b4.png 1024w"
loading="lazy"
alt="bi_color_led_cv_input_driver"
class="gallery-image"
data-flex-grow="104"
data-flex-basis="251px"
>&lt;/p></description></item><item><title>AS3340 VCO</title><link>https://diysynthmnl.github.io/p/as3340-vco/</link><pubDate>Fri, 29 Dec 2023 00:00:00 +0800</pubDate><guid>https://diysynthmnl.github.io/p/as3340-vco/</guid><description>&lt;p>&lt;a class="link" href="https://github.com/DIYSynthMNL/Eurorack-3340-VCO" target="_blank" rel="noopener"
>Module GitHub Link&lt;/a>&lt;/p>
&lt;h2 id="resources">Resources
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://www.timstinchcombe.co.uk/index.php?pge=trisin" target="_blank" rel="noopener"
>Tri to sin using a JFET&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://www.alfarzpp.lv/eng/sc/AS3340.pdf" target="_blank" rel="noopener"
>AS3340 Datasheet&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://electricdruid.net/cem3340-vco-voltage-controlled-oscillator-designs/" target="_blank" rel="noopener"
>Electric Druid - 3340 VCO Designs&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://yusynth.net/Modular/EN/VCO/index.html" target="_blank" rel="noopener"
>YuSynth VCO&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="as3340-chip-breakdown">AS3340 Chip breakdown
&lt;/h2>&lt;h3 id="power-supply">Power Supply
&lt;/h3>&lt;ul>
&lt;li>Pins 16 (VCC Positive) and 3 (VEE negative)&lt;/li>
&lt;li>CANNOT be powered with +/- 15V, +/-12V without protection&lt;/li>
&lt;li>Voltage between VCC and VEE should be less than +24V&lt;/li>
&lt;li>Voltage between VCC and GND should be less than +18V&lt;/li>
&lt;li>Voltage between VEE and GND should be less than -6V
&lt;ul>
&lt;li>A current limiting resistor is used in the datasheet when powering it with -15V&lt;/li>
&lt;li>You can power VEE with -5V without using a current limiting resistor&lt;/li>
&lt;li>When powering VEE with -15V, use an 820R current limiting resistor&lt;/li>
&lt;li>When powering VEE with -12V, use a 470R current limiting resistor&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="sync">Sync
&lt;/h3>&lt;ul>
&lt;li>Pins 6 (Hard SYNC) and 9 (Soft SYNC)&lt;/li>
&lt;/ul>
&lt;h3 id="output-levels">Output Levels
&lt;/h3>&lt;ul>
&lt;li>Pins 4 (Pulse), 8 (Saw), and 10 (Triangle)&lt;/li>
&lt;li>Ramp - 2/3rds of the positive supply&lt;/li>
&lt;li>Triangle - 1/3rd of the positive supply&lt;/li>
&lt;li>Pulse - positive supply minus 1.3V
&lt;ul>
&lt;li>Open emitter - requires a pulldown resistor to set the lower level&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>With a +15V supply
&lt;ul>
&lt;li>Ramp - 0 to 10V&lt;/li>
&lt;li>Triangle - 0 to 5V&lt;/li>
&lt;li>Pulse - 0 to 13.5V&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>With a +12V supply
&lt;ul>
&lt;li>Ramp - 0 to 8V&lt;/li>
&lt;li>Triangle - 0 to 4V&lt;/li>
&lt;li>Pulse - 0 to 10.7V&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="scale-pins">Scale pins
&lt;/h3>&lt;ul>
&lt;li>Pins 1 (Scale1) and 2 (Scale2)&lt;/li>
&lt;li>For temperature compensation&lt;/li>
&lt;/ul>
&lt;h3 id="high-frequency-tracking">High frequency tracking
&lt;/h3>&lt;ul>
&lt;li>Pin 7&lt;/li>
&lt;li>Compensates for the way that the time taken for the internal comparator to switch becomes significant at higher frequencies&lt;/li>
&lt;/ul>
&lt;h3 id="timing-capacitor">Timing capacitor
&lt;/h3>&lt;ul>
&lt;li>Pin 11&lt;/li>
&lt;li>Use a good quality capacitor&lt;/li>
&lt;li>Low leakage, low tempco&lt;/li>
&lt;li>Polystyrene film is the best option&lt;/li>
&lt;li>1nF value&lt;/li>
&lt;/ul>
&lt;h3 id="linear-fm-input">Linear FM input
&lt;/h3>&lt;ul>
&lt;li>Pin 13&lt;/li>
&lt;li>Sometimes not used by designers, a only bias network is present (1M5, 470R, 10n)&lt;/li>
&lt;/ul>
&lt;h3 id="note-cv-frequency-cv-input">Note CV (Frequency CV) input
&lt;/h3>&lt;ul>
&lt;li>Pin 15&lt;/li>
&lt;li>a virtual ground summing node&lt;/li>
&lt;li>Usually see a bias network (360K, 470R, 10n)&lt;/li>
&lt;li>Summing resistors connected to the node for CV sources&lt;/li>
&lt;/ul></description></item><item><title>Eurorack Panel Making With KiCad, LibreCad, and Inkscape</title><link>https://diysynthmnl.github.io/p/eurorack-panel-making-with-kicad-librecad-and-inkscape/</link><pubDate>Wed, 27 Dec 2023 00:00:00 +0800</pubDate><guid>https://diysynthmnl.github.io/p/eurorack-panel-making-with-kicad-librecad-and-inkscape/</guid><description>&lt;h2 id="my-workflow-on-making-eurorack-front-panels">My workflow on making Eurorack front panels
&lt;/h2>&lt;ol>
&lt;li>Lock footprints on control board where the controls are soldered by using the lock feature in KiCad so that they won’t be moved when placing the panel hole footprints.&lt;/li>
&lt;li>Make the panel board outline. Be sure to align it with the control board. The footprints of the control board should be locked or else you’ll have a hard time moving the panel board out of the control board.&lt;/li>
&lt;li>Place panel hole footprints on the control board footprints. Alignment points on the panel hole footprints should snap to the control board footprints.&lt;/li>
&lt;li>When finished placing panel hole footprints. Triple check alignment then highlight the whole front panel and move it out of the control board. Make sure that the locked footprints are not selectable - unselect locked footprints check box in selection filter.&lt;/li>
&lt;li>To make it easy to make the front panel graphics, I use LibreCad to mark holes and clearances for the graphics. In KiCad, you will use the dimension tool to mark where the holes are and then transfer it manually to LibreCad. I’ll explore exporting to svg in kicad soon.&lt;/li>
&lt;li>Next I’ll import the hole guide svg to inkscape to place front panel graphics.&lt;/li>
&lt;li>Use black for the objects and paths, use white for the background.&lt;/li>
&lt;li>Convert all objects to paths (text are objects). This is important because KiCad can’t render those objects.&lt;/li>
&lt;li>Keep the board outline, you’ll need it for alignment later in KiCad.&lt;/li>
&lt;li>The svg created in Inkscape should be ready for importing.&lt;/li>
&lt;li>Import the svg by clicking file &amp;gt; import &amp;gt; graphics (ctrl + shift + F) and import your svg file.&lt;/li>
&lt;li>Double click the front panel graphics and make the layer front silkscreen.&lt;/li>
&lt;li>Align the graphic to the front panel board outline.&lt;/li>
&lt;/ol></description></item><item><title>Adding Symbols, Footprints, and Libraries in Kicad</title><link>https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0800</pubDate><guid>https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/</guid><description>&lt;h2 id="adding-libraries">Adding Libraries
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/adding_libraries.png"
width="777"
height="360"
srcset="https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/adding_libraries_hu_84e3f313af8cd1e.png 480w, https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/adding_libraries_hu_96262df224da1aa6.png 1024w"
loading="lazy"
alt="adding_libraries.png"
class="gallery-image"
data-flex-grow="215"
data-flex-basis="518px"
>&lt;/p>
&lt;h3 id="symbol-libraries">Symbol Libraries
&lt;/h3>&lt;ul>
&lt;li>Make sure you put the library in a folder that you would not delete. Not in your downloads folder.&lt;/li>
&lt;li>Click add existing library to table&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/symbol_libraries.png"
width="1021"
height="689"
srcset="https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/symbol_libraries_hu_ea31bc7160f20252.png 480w, https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/symbol_libraries_hu_75934cb6d2ed18ff.png 1024w"
loading="lazy"
alt="symbol_libraries.png"
class="gallery-image"
data-flex-grow="148"
data-flex-basis="355px"
>&lt;/p>
&lt;ul>
&lt;li>Browse to your &lt;code>.sym&lt;/code> or &lt;code>.lib&lt;/code> file within your folder and click ok&lt;/li>
&lt;/ul>
&lt;h3 id="footprint-libraries">Footprint Libraries
&lt;/h3>&lt;ul>
&lt;li>Make sure you put the library in a folder that you would not delete. Not in your downloads folder.&lt;/li>
&lt;li>Click add existing library to table&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/footprint_libraries.png"
width="1009"
height="680"
srcset="https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/footprint_libraries_hu_1b11b0c8bf489424.png 480w, https://diysynthmnl.github.io/p/adding-symbols-footprints-and-libraries-in-kicad/footprint_libraries_hu_255d522939c5c70a.png 1024w"
loading="lazy"
alt="footprint_libraries.png"
class="gallery-image"
data-flex-grow="148"
data-flex-basis="356px"
>&lt;/p>
&lt;ul>
&lt;li>Browse to your .pretty folder and select it. Then click ok.&lt;/li>
&lt;/ul>
&lt;h2 id="adding-footprints">Adding footprints
&lt;/h2>&lt;p>To be continued&amp;hellip;&lt;/p></description></item><item><title>Pcb Track Widths, Vias, and Pads</title><link>https://diysynthmnl.github.io/p/pcb-track-widths-vias-and-pads/</link><pubDate>Sat, 23 Dec 2023 00:00:00 +0800</pubDate><guid>https://diysynthmnl.github.io/p/pcb-track-widths-vias-and-pads/</guid><description>&lt;p>To jumpstart your PCB design I will list my recommended track widths for module PCBs.
If you&amp;rsquo;re going for another manufacturer, be sure to know their capabilities.&lt;/p>
&lt;ul>
&lt;li>PCBWAY capabilities &lt;a class="link" href="https://www.pcbway.com/capabilities.html" target="_blank" rel="noopener"
>https://www.pcbway.com/capabilities.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="track-widths">Track widths
&lt;/h2>&lt;p>&lt;a class="link" href="https://www.reddit.com/r/synthdiy/comments/y1be7v/pcb_design_how_do_you_pick_trace_widths_for_your/" target="_blank" rel="noopener"
>https://www.reddit.com/r/synthdiy/comments/y1be7v/pcb_design_how_do_you_pick_trace_widths_for_your/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>0.02” for signal, 0.127mm, or 5 mils&lt;/li>
&lt;li>0.035” for power, 0.889mm,&lt;/li>
&lt;li>PCBWAY: 4mil minimum, recommends a trace width above 6mils (0.15mm)&lt;/li>
&lt;/ul>
&lt;h2 id="minimum-track-clearance">Minimum track clearance
&lt;/h2>&lt;ul>
&lt;li>PCBWAY: 4mil minimum, recommended 6mil&lt;/li>
&lt;/ul>
&lt;h2 id="vias">Vias
&lt;/h2>&lt;ul>
&lt;li>0.2mm inner dia, 0.5mm outer dia&lt;/li>
&lt;li>PCBWAY: Min drill size is 0.2mm, max drill is 6.3mm. Any holes greater than 6.3mm or smaller than 0.3mm will be subject to extra charges.&lt;/li>
&lt;/ul>
&lt;h2 id="pads">Pads
&lt;/h2>&lt;ul>
&lt;li>For my longer pad footprints I use 2.54mm L * 1.6mm W with a 0.8mm hole&lt;/li>
&lt;li>PCBWAY: Min drill size is 0.2mm, max drill is 6.3mm. Any holes greater than 6.3mm or smaller than 0.3mm will be subject to extra charges.&lt;/li>
&lt;/ul>
&lt;h2 id="text">Text
&lt;/h2>&lt;ul>
&lt;li>PCBWAY: min character width is 0.15mm&lt;/li>
&lt;/ul>
&lt;h2 id="panelization">Panelization
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/pcb-track-widths-vias-and-pads/panelization.png"
width="927"
height="116"
srcset="https://diysynthmnl.github.io/p/pcb-track-widths-vias-and-pads/panelization_hu_19ccea16225c43fe.png 480w, https://diysynthmnl.github.io/p/pcb-track-widths-vias-and-pads/panelization_hu_ac5203cd3476eb53.png 1024w"
loading="lazy"
alt="panelization.png"
class="gallery-image"
data-flex-grow="799"
data-flex-basis="1917px"
>&lt;/p></description></item><item><title>Building my first eurorack case</title><link>https://diysynthmnl.github.io/p/building-my-first-eurorack-case/</link><pubDate>Sat, 16 Dec 2023 06:07:14 +0000</pubDate><guid>https://diysynthmnl.github.io/p/building-my-first-eurorack-case/</guid><description>&lt;h2 id="dimensions">Dimensions
&lt;/h2>&lt;h3 id="rails">Rails
&lt;/h3>&lt;p>The rails I got are not specifically made for Eurorack but I tested it with some blank panels and it works.
I used M3 square nuts and 6mm long screws. 6mm screws are a bit short so I should get 8mm long ones.&lt;/p>
&lt;h3 id="length">Length
&lt;/h3>&lt;p>&lt;a class="link" href="https://synthracks.com/blog/eurorack-rails-diy-guide" target="_blank" rel="noopener"
>https://synthracks.com/blog/eurorack-rails-diy-guide&lt;/a>
The standard rail lengths are as follows:&lt;/p>
&lt;ul>
&lt;li>60HP - 304.8mm&lt;/li>
&lt;li>84HP - 426.72mm&lt;/li>
&lt;li>104HP - 528.32mm&lt;/li>
&lt;li>110HP - 558.8mm&lt;/li>
&lt;li>126HP - 640.08mm&lt;/li>
&lt;li>168HP - 853.44mm&lt;/li>
&lt;/ul>
&lt;p>I will go for a single row 84HP case. So that would be a length of 426.72mm. I would cut a bit more so it would give me some room for error. I will go for a length of 427mm.
I have to cut my rails. I have a total of 90cm to cut. I could only cut it into two so I went for 84HP.&lt;/p>
&lt;h3 id="depth">Depth
&lt;/h3>&lt;ul>
&lt;li>From the top of the rails it should measure about 10cm or more depending on your power supply&lt;/li>
&lt;/ul>
&lt;h3 id="module-height">Module height
&lt;/h3>&lt;p>I fit two blank modules on my rails and then measured the height between rails. I got 13.4 cm.&lt;/p>
&lt;h2 id="design-inspiration">Design Inspiration
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/inspo_1.png"
width="455"
height="294"
srcset="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/inspo_1_hu_e7cf9afdc295e4f4.png 480w, https://diysynthmnl.github.io/p/building-my-first-eurorack-case/inspo_1_hu_299ace3c7b8a1ddf.png 1024w"
loading="lazy"
alt="inspo_1"
class="gallery-image"
data-flex-grow="154"
data-flex-basis="371px"
> &lt;img src="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/inspo_2.png"
width="433"
height="344"
srcset="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/inspo_2_hu_3f8c8b5d2c244836.png 480w, https://diysynthmnl.github.io/p/building-my-first-eurorack-case/inspo_2_hu_20004071db1be258.png 1024w"
loading="lazy"
alt="inspo_2"
class="gallery-image"
data-flex-grow="125"
data-flex-basis="302px"
>&lt;/p>
&lt;p>I chose this design because I like how you can change the orientation.&lt;/p>
&lt;h3 id="my-design">My design
&lt;/h3>&lt;p>I used google Sketchup to draft what I had in mind then I used Librecad to draw the side panel guides so I could transfer the template easily.&lt;/p>
&lt;p>Initial drafts:&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_1.png"
width="1032"
height="1145"
srcset="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_1_hu_45352cac9141afb.png 480w, https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_1_hu_e5724881f0f27e29.png 1024w"
loading="lazy"
alt="side_profile_1"
class="gallery-image"
data-flex-grow="90"
data-flex-basis="216px"
> &lt;img src="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_2.png"
width="1521"
height="1293"
srcset="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_2_hu_fa412d575a96d6b6.png 480w, https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_2_hu_1ccad6e990baec54.png 1024w"
loading="lazy"
alt="side_profile_2"
class="gallery-image"
data-flex-grow="117"
data-flex-basis="282px"
> &lt;img src="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_3.png"
width="1047"
height="904"
srcset="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_3_hu_bae135a15b3a22b4.png 480w, https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_3_hu_2c87e4c8be2d17ca.png 1024w"
loading="lazy"
alt="side_profile_3"
class="gallery-image"
data-flex-grow="115"
data-flex-basis="277px"
> &lt;img src="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_4.png"
width="1908"
height="1357"
srcset="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_4_hu_4a130a1b1b6fcf91.png 480w, https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_4_hu_6b0b5818a74eae63.png 1024w"
loading="lazy"
alt="side_profile_4"
class="gallery-image"
data-flex-grow="140"
data-flex-basis="337px"
> &lt;img src="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_6.png"
width="1250"
height="877"
srcset="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_6_hu_a6dbebe9de8a8b53.png 480w, https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_6_hu_e1dcd4a444194865.png 1024w"
loading="lazy"
alt="side_profile_5"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="342px"
>&lt;/p>
&lt;p>Final Design:&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_6.png"
width="1250"
height="877"
srcset="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_6_hu_a6dbebe9de8a8b53.png 480w, https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_6_hu_e1dcd4a444194865.png 1024w"
loading="lazy"
alt="side_profile_6"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="342px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_7.png"
width="1252"
height="880"
srcset="https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_7_hu_b99f96e875fc0a8f.png 480w, https://diysynthmnl.github.io/p/building-my-first-eurorack-case/side_profile_7_hu_79be2e87734f1c85.png 1024w"
loading="lazy"
alt="side_profile_7"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="341px"
>&lt;/p>
&lt;p>I would recommend using half inch or 10 - 15 mm thick plywood I used scrap wood. Make sure to screw in your rails first with some blank panels or modules in order to keep error low.
My workflow:&lt;/p>
&lt;ul>
&lt;li>I’ll cut the rails into two&lt;/li>
&lt;li>Try them out with blanks&lt;/li>
&lt;li>Measure the height
&lt;ul>
&lt;li>The height I measured was 13.4cm&lt;/li>
&lt;li>Think of the wood panel design, either beveled view or not&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Design the side panels&lt;/li>
&lt;li>Then cut wood panels&lt;/li>
&lt;li>Build!&lt;/li>
&lt;/ul>
&lt;h3 id="some-resources">Some resources
&lt;/h3>&lt;ul>
&lt;li>&lt;a class="link" href="https://www.youtube.com/watch?v=6mVbi8B3usY" target="_blank" rel="noopener"
>DIY eurorack case part 1&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Powering Your Module</title><link>https://diysynthmnl.github.io/p/powering-your-module/</link><pubDate>Thu, 14 Dec 2023 17:21:32 +0000</pubDate><guid>https://diysynthmnl.github.io/p/powering-your-module/</guid><description>&lt;img src="https://diysynthmnl.github.io/p/powering-your-module/eurorack_power_pinouts.png" alt="Featured image of post Powering Your Module" />&lt;h2 id="the-basic-components-of-a-power-input-circuit-in-a-module">The basic components of a power input circuit in a module
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/powering-your-module/mutable_instruments_power_input_circuit.png"
width="1840"
height="682"
srcset="https://diysynthmnl.github.io/p/powering-your-module/mutable_instruments_power_input_circuit_hu_83a7f4ff97f774ce.png 480w, https://diysynthmnl.github.io/p/powering-your-module/mutable_instruments_power_input_circuit_hu_859f441214aa1b87.png 1024w"
loading="lazy"
alt="mutable_instruments_power_input_circuit.png"
class="gallery-image"
data-flex-grow="269"
data-flex-basis="647px"
>&lt;/p>
&lt;p>The circuit above is from a Mutable Instruments module.&lt;/p>
&lt;ul>
&lt;li>IDC input&lt;/li>
&lt;li>Reverse polarity protection&lt;/li>
&lt;li>Filter caps&lt;/li>
&lt;/ul>
&lt;h2 id="the-eurorack-standard-power-connector">The Eurorack standard power connector
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/powering-your-module/eurorack_power_pinouts.png"
width="3490"
height="3494"
srcset="https://diysynthmnl.github.io/p/powering-your-module/eurorack_power_pinouts_hu_19cb0829c2f29737.png 480w, https://diysynthmnl.github.io/p/powering-your-module/eurorack_power_pinouts_hu_377ab4f7c2ba14b3.png 1024w"
loading="lazy"
alt="eurorack_power_pinouts.png"
class="gallery-image"
data-flex-grow="99"
data-flex-basis="239px"
>&lt;/p></description></item><item><title>Protecting Microcontroller Digital IO From Eurorack Levels</title><link>https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0800</pubDate><guid>https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/</guid><description>&lt;img src="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_input_protection.jpg" alt="Featured image of post Protecting Microcontroller Digital IO From Eurorack Levels" />&lt;p>Here are some circuits to help protect your precious microcontroller&amp;rsquo;s inputs.&lt;/p>
&lt;h2 id="protecting-microcontroller-analog-inputs">Protecting microcontroller analog inputs
&lt;/h2>&lt;h3 id="using-mutable-instruments-grids-as-our-first-example">Using Mutable Instruments’ Grids as our first example
&lt;/h3>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_input_protection.jpg"
width="1372"
height="769"
srcset="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_input_protection_hu_63d5d5b7db1473a7.jpg 480w, https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_input_protection_hu_5d9dc998b2927991.jpg 1024w"
loading="lazy"
alt="grids_input_protection.jpg"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="428px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_reference_voltage_diode.jpg"
width="1476"
height="625"
srcset="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_reference_voltage_diode_hu_8c4106b810a3f28a.jpg 480w, https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_reference_voltage_diode_hu_98dfbf7b01e84574.jpg 1024w"
loading="lazy"
alt="grids_reference_voltage_diode.jpg"
class="gallery-image"
data-flex-grow="236"
data-flex-basis="566px"
>&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_input_protection_simulation.jpg"
width="1000"
height="1410"
srcset="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_input_protection_simulation_hu_2b670ccc237b0a55.jpg 480w, https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_input_protection_simulation_hu_c1eaf085bd3eb43d.jpg 1024w"
loading="lazy"
alt="grids_input_protection_simulation.jpg"
class="gallery-image"
data-flex-grow="70"
data-flex-basis="170px"
>&lt;/p>
&lt;ul>
&lt;li>You will need a rail to rail op amp. A popular choice would be an MCP6002 chip.&lt;/li>
&lt;li>The op amp would be powered by 5v and ground &lt;strong>(not +-12V!)&lt;/strong>. This will &amp;ldquo;clamp&amp;rdquo; the cv signal.&lt;/li>
&lt;li>The output of the op amp connects to an analog input of a microcontroller.&lt;/li>
&lt;li>You would need a negative reference voltage source. Grids used a Zener diode. VEE is -12v.&lt;/li>
&lt;li>I usually use a 7905 -5v negative voltage regulator for the reference voltage.&lt;/li>
&lt;li>&lt;strong>This is an inverting op amp circuit, you would need to adjust your code to accept inverted values&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3 id="adding-an-input-amplitude-knob">Adding an input amplitude knob
&lt;/h3>&lt;p>Adding an input amplitude knob to the Grids circuit would help us accept a wide range of signals in combination with the offset knob. 0-5v, 0-10v, and +-5v.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/protection_circuit_with_offset_knob_and_input_amplitude_knob.jpg"
width="972"
height="514"
srcset="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/protection_circuit_with_offset_knob_and_input_amplitude_knob_hu_2ff641dc91054ca0.jpg 480w, https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/protection_circuit_with_offset_knob_and_input_amplitude_knob_hu_965808e51f2ad8c6.jpg 1024w"
loading="lazy"
alt="protection_circuit_with_offset_knob_and_input_amplitude_knob.jpg"
class="gallery-image"
data-flex-grow="189"
data-flex-basis="453px"
>&lt;/p>
&lt;h2 id="protecting-microcontroller-digital-inputs">Protecting microcontroller digital inputs
&lt;/h2>&lt;p>&lt;img src="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_digital_io_protection_circuit.jpg"
width="818"
height="735"
srcset="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_digital_io_protection_circuit_hu_a139223177512c07.jpg 480w, https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/grids_digital_io_protection_circuit_hu_ba91d01aa00d09c5.jpg 1024w"
loading="lazy"
alt="grids_digital_io_protection_circuit.jpg"
class="gallery-image"
data-flex-grow="111"
data-flex-basis="267px"
>&lt;/p>
&lt;ul>
&lt;li>It uses an NPN transistor with a pullup resistor&lt;/li>
&lt;li>&lt;strong>Note that the Arduino pin will be low when the gate is high, code with this in mind.&lt;/strong>&lt;/li>
&lt;li>It connects directly to a digital input pin of the Arduino&lt;/li>
&lt;li>To protect your inputs more, you could add clamping diodes to the base of the transistor like below&lt;/li>
&lt;li>The bat42 Schottky diode is commonly used for this purpose&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/digital_input_protection_circuit.jpg"
width="1650"
height="1220"
srcset="https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/digital_input_protection_circuit_hu_93a3a769c1851a62.jpg 480w, https://diysynthmnl.github.io/p/protecting-microcontroller-digital-io-from-eurorack-levels/digital_input_protection_circuit_hu_17eb02457c269c6f.jpg 1024w"
loading="lazy"
alt="digital_input_protection_circuit.jpg"
class="gallery-image"
data-flex-grow="135"
data-flex-basis="324px"
>&lt;/p>
&lt;blockquote>
&lt;p>Disclaimer: The information provided in this blog is based on my personal experience and knowledge. I am not formally educated in electronics design, and any design or information should be undertaken at your own risk. It is always recommended to consult with a qualified professional or conduct thorough research before attempting any electronics project. I do not guarantee the accuracy, completeness, or reliability of the information presented on this blog. By using this blog, you agree that I shall not be held responsible for any damages or losses that may arise from your use of the information provided.&lt;/p>&lt;/blockquote></description></item><item><title>Ladik R110 Clone</title><link>https://diysynthmnl.github.io/p/ladik-r110-clone/</link><pubDate>Wed, 13 Dec 2023 10:13:27 +0000</pubDate><guid>https://diysynthmnl.github.io/p/ladik-r110-clone/</guid><description>&lt;img src="https://diysynthmnl.github.io/p/ladik-r110-clone/ladik_r-110_side.jpg" alt="Featured image of post Ladik R110 Clone" />&lt;h2 id="idea">Idea
&lt;/h2>&lt;p>I stumbled upon a video that relies on this clocked random trigger/gates module from State Azure.&lt;/p>
&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/6JeZR13dLLI"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;p>Here’s his patch notes:&lt;/p>
&lt;p>Main clock from Pamela&amp;rsquo;s New Workout, into Ladik R-110 for the random trigs/gates which are essential to this patch.
(Synth voice - Plaits)Trig 1 goes through a Ladik S-090 Skipper at around 60%, which also is being CV modulated via Modbox with a very slow LFO. Trig 1 is then sent to Sinfonion Arp Clock input, which is also copied out to Delta V envelope generator slow atk/decay (decay modulated gently via one of Ochd&amp;rsquo;s outputs). This envelope controls Plaits output via the built into VCA in Delta V. Sinfonion Arp 1v/Oct Out goes into Plaits (arp set to either random or Brownian). Plaits Timbre is modulated via URA A-Out, Harm by B-Out, and Morph by another channel of Ochd. Plaits also receives fast sine LFO FM for vibrato. Plaits then goes through Belgrad, with v/oct modulated by second channel of Delta V 50%atk, 50%dcy (same Trig 1 activates it), which is also copied to Ochd CV input to modulated Ochd speed everytime the envelope is triggered. Belgrad set to 6th filter, FM on, 60% resonance. Span modulated via slow LFO of Ochd, and FM modulated by fast LFO of Ochd.
(Vangelis lead - 4ms Ensemble) Gate1 from Ladik R-110 into Skipper set around 50% (CV modulated) via slow LFO from Modbox. Output from Skipper goes to Quadigy channel 1 and copied to Trig input on RndStep, copied again to Time Warp Gate input. Quadigy Ch.1 Envelope to Tallin linear input, slow attack/decay. Input into Tallin 4ms Ensemble Out B, Balance set to 70%, Twist, Warp and Cross FM all at 0%. Twist opens up via Ch.2 of Quadigy which is tied to Ch.1&amp;rsquo;s trigger, and also has a slow atk/decay for the synth swell. RndStep Bipolar output (attentuated) goes to Ch.3 on Sinfonion, with Ch.3 Sin output going into Time Warp (for Slew), out from Time Warp into 4ms Ensemble 1v/oct input.
(Chainsaw Bass) Ch.1 Output from Sinfonion provides notes, into Chainsaw 1v/oct input. Chainsaw then into Freak filter (Steiner-Parker model), cutoff modulated via Ch. 4 of Quadigy which is triggered by PNW very slow/divided pulse into Skipper.
(Chainsaw 2-note chords) Sinfonion chord Out 1 and Out 3 to second Chainsaw, then out to dual Cinnamon filters set to low-pass, with soft/slow LFO over cutoff via Batumi.
(Sinfonion Key Change) Sinfonion song set to just two steps = E7 to A Major. In1 on Sinfonion set to advance through steps via Trig. Trig comes from PNW slow/heavily divided gate into another Skipper, then to Sinfonion.
Lubadh plays back improvised recording from the Wavestate.&lt;/p>
&lt;h2 id="heres-the-modules-details">Here’s the module’s details
&lt;/h2>&lt;p>R-110 “Random clocked trigs/gates w. disable input” module for eurorack / Doepfer A100 system.&lt;/p>
&lt;p>&lt;img src="https://diysynthmnl.github.io/p/ladik-r110-clone/ladik_r-110_front.jpg"
width="125"
height="800"
srcset="https://diysynthmnl.github.io/p/ladik-r110-clone/ladik_r-110_front_hu_7c05d9bc785c3976.jpg 480w, https://diysynthmnl.github.io/p/ladik-r110-clone/ladik_r-110_front_hu_67c6819936e6d65d.jpg 1024w"
loading="lazy"
alt="ladik_r-110_front"
class="gallery-image"
data-flex-grow="15"
data-flex-basis="37px"
> &lt;img src="https://diysynthmnl.github.io/p/ladik-r110-clone/ladik_r-110_side.jpg"
width="283"
height="800"
srcset="https://diysynthmnl.github.io/p/ladik-r110-clone/ladik_r-110_side_hu_c55ec88be4b4143a.jpg 480w, https://diysynthmnl.github.io/p/ladik-r110-clone/ladik_r-110_side_hu_88f6a926cb5ea17b.jpg 1024w"
loading="lazy"
alt="ladik_r-110_side"
class="gallery-image"
data-flex-grow="35"
data-flex-basis="84px"
>&lt;/p>
&lt;p>From top to bottom:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Disable input jack + LED (if active, gate outputs stays in its current state or are all switched off – selectable by internal jumper)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Clock input jack + LED&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Trig 1/2/3 output jacks and LEDs (probability = 1/3 so in average every third input clock makes output trigger)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Gate 1/2/3 output jacks and LEDs (probability = 1/3 so in average every third clock toggles output)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If there will be say 300 input clocks every trig output makes around 100 trigs. All outputs has same probability but they are independently evaluated (so they can fire together sometimes or individually sometimes).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Gates are processed similar way but there is “probability of change state”, if clock is evaluated as “valid” to change output state then output toggles (if currently is off then becomes on and vice versa) making gates “quantized” by their lengths to input clocks (gates starts and ends at clocks).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Configurable parameters&lt;/strong> (by internal jumpers, just one of first five should be set):&lt;/p>
&lt;p>1. &lt;strong>jumper 1&lt;/strong>: fixed &lt;strong>1ms&lt;/strong> trig outputs&lt;/p>
&lt;p>2. &lt;strong>jumper 2&lt;/strong>: fixed &lt;strong>200ms&lt;/strong> trig outputs&lt;/p>
&lt;p>3. &lt;strong>jumper 3&lt;/strong>: variable trigger outputs length – &lt;strong>quarter&lt;/strong> of input gate length&lt;/p>
&lt;p>4. &lt;strong>jumper 4&lt;/strong>: variable trigger outputs length – &lt;strong>half&lt;/strong> of input gate length&lt;/p>
&lt;p>5. &lt;strong>jumper 5&lt;/strong>: variable trigger outputs length – &lt;strong>equal&lt;/strong> to input gate length&lt;/p>
&lt;p>6. &lt;strong>independent &amp;ldquo;disable&amp;rdquo; jumper&lt;/strong> (behind T1 output jack): gate outputs stays in its current state (jumper not set ) or are all switched off (jumper set) at active “disable” input signal&lt;/p>
&lt;h2 id="circuit-design">Circuit Design
&lt;/h2>&lt;p>It uses what looks like an ATMEL chip which probably is an ATMEGA. We can use an Arduino Nano for this module.&lt;/p>
&lt;blockquote>
&lt;p>We have to protect the Arduino from 10vpp levels as a safety precaution. Head on to &lt;a class="link" href="../protecting-digital-io-from-eurorack-levels/" >Protecting Digital IO From Eurorack Levels&lt;/a>&lt;/p>&lt;/blockquote>
&lt;h3 id="eurorack-voltage-levels">Eurorack voltage levels
&lt;/h3>&lt;ul>
&lt;li>CV -5v to +5v, 10vpp&lt;/li>
&lt;li>Clocks, Gates, Triggers are TTL level which is 0v to 5v (logic level)&lt;/li>
&lt;/ul>
&lt;p>With this in mind, additional circuitry will be needed in order to protect i/o and convert Eurorack levels to Arduino levels.&lt;/p>
&lt;h3 id="the-modules-inputs-are-as-follows">The module’s inputs are as follows
&lt;/h3>&lt;ul>
&lt;li>Gate hold (disable input) input, logic level&lt;/li>
&lt;li>Clock input, logic level&lt;/li>
&lt;/ul>
&lt;p>We can protect the inputs using this circuit:
&lt;img src="https://diysynthmnl.github.io/p/ladik-r110-clone/clock_input_circuit.png"
width="1138"
height="815"
srcset="https://diysynthmnl.github.io/p/ladik-r110-clone/clock_input_circuit_hu_c6260ed3d42f6f.png 480w, https://diysynthmnl.github.io/p/ladik-r110-clone/clock_input_circuit_hu_55c4860e7b94e933.png 1024w"
loading="lazy"
alt="clock_input_circuit"
class="gallery-image"
data-flex-grow="139"
data-flex-basis="335px"
>&lt;/p>
&lt;h3 id="the-modules-outputs-are-as-follows">The module’s outputs are as follows
&lt;/h3>&lt;ul>
&lt;li>Trigger out 1/2/3&lt;/li>
&lt;li>Gate out 1/2/3&lt;/li>
&lt;/ul>
&lt;p>We can have additional protection for the outputs in case the user accidentally plugs in a 10vpp voltage source, but we can worry about that later on. For now we’ll just directly connect the Arduino to the output jacks.&lt;/p>
&lt;h2 id="how-the-module-works">How the module works
&lt;/h2>&lt;p>Let’s start by listing the module’s i/o:&lt;/p>
&lt;ul>
&lt;li>Inputs
&lt;ul>
&lt;li>Clock input&lt;/li>
&lt;li>Gate hold input&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Outputs
&lt;ul>
&lt;li>Triggers 1/2/3
&lt;ul>
&lt;li>Probability of firing is 1 out of 3 clock pulses&lt;/li>
&lt;li>Can be set to a fixed value (1ms, 200ms) or variable (1/4, 1/2, 1/1, of clock input pulses) depending on the clock length by jumpers&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Gates 1/2/3
&lt;ul>
&lt;li>Probability of firing is 1 out of 3 clock pulses&lt;/li>
&lt;li>Gates will be the same as the clock pulse length&lt;/li>
&lt;li>If the gate hold input is high, their current state will be held&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item></channel></rss>